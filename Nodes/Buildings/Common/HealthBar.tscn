[gd_scene load_steps=9 format=2]

[ext_resource path="res://Nodes/Map/ZIndexer.tscn" type="PackedScene" id=1]

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

void fragment() {
	MODULATE;
	COLOR = texture(TEXTURE, UV);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="Gradient" id=10]
offsets = PackedFloat32Array( 0 )
colors = PackedColorArray( 0.286275, 0, 0, 1 )

[sub_resource type="GradientTexture2D" id=8]
gradient = SubResource( 10 )
width = 30

[sub_resource type="Gradient" id=5]
offsets = PackedFloat32Array( 0 )
colors = PackedColorArray( 0, 0.261719, 1, 1 )

[sub_resource type="GradientTexture2D" id=11]
gradient = SubResource( 5 )
width = 30

[sub_resource type="GDScript" id=9]
script/source = "extends TextureProgressBar

@onready var building := get_parent().get_parent()

func _ready() -> void:
	update_value()

func _notification(what: int) -> void:
	if what == NOTIFICATION_TRANSFORM_CHANGED:
		get_parent().global_rotation = 0

func update_value():
	value = max_value * (float(building.hp) / building.max_hp)
	visible = value < max_value
	set_notify_transform(visible)
"

[node name="HealthBarParent" type="Node2D" groups=["dont_save"]]
z_index = 810
z_as_relative = false

[node name="HealthBar" type="TextureProgressBar" parent="."]
material = SubResource( 7 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -15.0
offset_top = 20.0
offset_right = 15.0
offset_bottom = 21.0
max_value = 1000.0
value = 1000.0
texture_under = SubResource( 8 )
texture_progress = SubResource( 11 )
script = SubResource( 9 )

[node name="ZIndexer" parent="." instance=ExtResource( 1 )]
z_index = 800
offset = 10
