[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=19]
code = "shader_type canvas_item;
uniform mat4 global_transform;
varying vec2 global_position;

uniform float kicked_time=0.0;


void vertex() {
	mat4 glo = global_transform;
	mat2 ddd = mat2(glo);
	global_position = (EXTRA_MATRIX * glo * vec4(VERTEX, 0.0, 1.0)).xy;
}

void fragment() {
	
	//float kicked= 5.0*clamp(1.0-pow(fract(TIME*0.5)*3.0,0.1),0.0,1.0);
	float kicked= 5.0*clamp(0.5-abs(0.5-pow(kicked_time*0.5,0.1)),0.0,1.0);
	
	COLOR = texture(TEXTURE, UV + vec2(sin(TIME+UV.x*(10.0)+kicked*2.0*sin(TIME)),cos(TIME+UV.y*(7.0)-kicked*3.0*sin(TIME*2.0))) * (0.03+kicked*0.04)*distance(UV,vec2(0.5)));
	COLOR=COLOR+max(COLOR.g-0.2,0.0)*vec4(1.0,0.0,1.0,1.0)*5.0;
}"

[resource]
shader = SubResource( 19 )
shader_param/global_transform = null
shader_param/kicked_time = 0.0
