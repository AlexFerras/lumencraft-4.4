[gd_scene load_steps=5 format=2]

[ext_resource path="res://Nodes/Objects/Rock/Rock0.png" type="Texture2D" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends PixelMapRigidBody

var destroyed: bool

func _ready() -> void:
	Utils.set_collisions($Detector, Const.ENEMY_COLLISION_LAYER, Utils.PASSIVE)
	$Sprite2D.texture = load(str(\"res://Nodes/Objects/Rock/Rock\", randi() % 3, \".png\"))
	rotation = randf() * TAU
	set_meta(\"object_type\", \"Boulder\")

func on_enter(area: Area2D) -> void:
	if destroyed:
		return
	
	if area.is_in_group(\"player_projectile\"):
		## TODO: SFX
		Utils.on_hit(area)
		
		var data: Dictionary= area.get_meta(\"data\")
		apply_central_impulse(data.get(\"velocity\", Vector2()) * data.damage * 0.1)
		
		## TODO: lepiej moÅ¼na
		if data.damage > 30:
			destroyed = true
			Utils.game.map.pixel_map.particle_manager.spawn_in_position(global_position, 500, Vector2(), Color(\"8c6841\"))
			queue_free()
"

[sub_resource type="CircleShape2D" id=1]
radius = 12.0

[sub_resource type="CircleShape2D" id=3]
radius = 9.0

[node name="Rock" type="PixelMapRigidBody"]
mass = 20.0
linear_damp = 10.0
angular_damp = 10.0
radius = 12
pixel_map_bounce = 0.2
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2( 0.25, 0.25 )
texture = ExtResource( 1 )

[node name="Detector" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Detector"]
shape = SubResource( 3 )

[connection signal="area_entered" from="Detector" to="." method="on_enter"]
