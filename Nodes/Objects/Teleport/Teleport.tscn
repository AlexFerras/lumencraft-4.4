[gd_scene load_steps=13 format=2]

[ext_resource path="res://Nodes/Objects/Teleport/Teleport.png" type="Texture2D" id=1]
[ext_resource path="res://Nodes/Objects/Teleport/TeleportParticles.png" type="Texture2D" id=2]
[ext_resource path="res://Nodes/Map/ZIndexer.gd" type="Script" id=3]

[sub_resource type="GDScript" id=3]
script/source = "extends PlayerDetector

@export var color: int

@onready var particles = [$Particles/IdleParticles, $Particles/InParticles, $Particles/OutParticles]

var locked: bool
var target: Node2D
var player_that_entered: Player

func _ready() -> void:
	$Sprite2D.modulate.h = color * 0.125
	$Particles.modulate.h = color * 0.125
	
	var first: Node2D
	for teleport in get_tree().get_nodes_in_group(\"teleports\"):
		if teleport.color == color:
			if not first:
				first = teleport
			
			if target and target == self:
				target = teleport
				break
			
			target = teleport
	
	if not target or target == self:
		target = first
	
	if target == self:
		$AnimationPlayer.stop()
		particles[0].emitting = false
		$CollisionShape2D.disabled = true

func on_player_entered(player) -> void:
	if locked:
		return
	
	player_that_entered = player
	call_deferred(\"teleport_players\")

func on_player_exited(player) -> void:
	locked = false
	player_that_entered = null

func teleport_players():
	Utils.play_sample(preload(\"res://Nodes/Objects/Teleport/TeleportEnter.wav\"), self)
	
	target.locked = true
	particles[0].emitting = false
	target.particles[0].emitting = false
	
	particles[1].emitting = true
	
	var tween := create_tween()
	if Utils.game.get_second_viewport():
		player_that_entered.in_vehicle = true
		tween.parallel().tween_property(player_that_entered, @\"force_position\", global_position, 0.2).from(player_that_entered.global_position)
		tween.parallel().tween_property(player_that_entered, @\"modulate:a\", 0.0, 0.2).set_delay(0.2)
	else:
		for player in Utils.game.players:
			player.in_vehicle = true
			tween.parallel().tween_property(player, @\"force_position\", global_position, 0.2).from(player.global_position)
			tween.parallel().tween_property(player, @\"modulate:a\", 0.0, 0.2).set_delay(0.2)
	
	tween.tween_interval(0.2)
	tween.tween_interval(0.0)
	
	if Utils.game.get_second_viewport():
		tween.parallel().tween_property(player_that_entered, @\"global_position\", target.global_position, 0.0)
	else:
		for player in Utils.game.players:
			tween.parallel().tween_property(player, @\"global_position\", target.global_position, 0.0)
	
	tween.tween_callback(Callable(target.particles[2], \"set_emitting\").bind(true))
	tween.tween_callback(Callable(Utils, \"play_sample\").bind(preload(\"res://Nodes/Objects/Teleport/TeleportExit.wav\"), target))
	
	for player in Utils.game.players:
		tween.parallel().tween_property(player, @\"modulate:a\", 1.0, 0.2).set_delay(0.4)
	
	tween.tween_callback(Callable(particles[0], \"set_emitting\").bind(true))
	tween.tween_callback(Callable(target.particles[0], \"set_emitting\").bind(true))
	
	for player in Utils.game.players:
		tween.tween_callback(Callable(player, \"set\").bind(\"in_vehicle\", false))

func execute_action(action: String, data: Dictionary):
	var tween := create_tween()
	for player in Utils.game.players:
		player.in_vehicle = true
		tween.parallel().tween_property(player, @\"global_position\", global_position, 0.0)
	
	tween.tween_callback(Callable(particles[2], \"set_emitting\").bind(true))
	tween.tween_callback(Callable(Utils, \"play_sample\").bind(preload(\"res://Nodes/Objects/Teleport/TeleportExit.wav\"), target))
	
	for player in Utils.game.players:
		tween.parallel().tween_property(player, @\"modulate:a\", 1.0, 0.2).set_delay(0.4)
	
	tween.tween_callback(Callable(particles[0], \"set_emitting\").bind(target != self))
	
	for player in Utils.game.players:
		tween.tween_callback(Callable(player, \"set\").bind(\"in_vehicle\", false))
"

[sub_resource type="Animation" id=1]
resource_name = "Blink"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite2D:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0, 0.2, 0.5 ),
"transitions": PackedFloat32Array( 0.5, 2, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 2, 2, 2, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite2D:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="CircleShape2D" id=4]
radius = 5.09902

[sub_resource type="Gradient" id=5]
offsets = PackedFloat32Array( 0, 0.147273, 0.805455, 1 )
colors = PackedColorArray( 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture2D" id=6]
gradient = SubResource( 5 )

[sub_resource type="ParticleProcessMaterial" id=7]
emission_shape = 5
emission_ring_radius = 10.0
emission_ring_inner_radius = 10.0
emission_ring_height = 10.0
emission_ring_axis = Vector3( 0, 0, 1 )
flag_align_y = true
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 20.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel = -400.0
tangential_accel = 100.0
scale = 0.25
color_ramp = SubResource( 6 )

[sub_resource type="ParticleProcessMaterial" id=8]
emission_shape = 5
emission_ring_radius = 30.0
emission_ring_inner_radius = 30.0
emission_ring_height = 30.0
emission_ring_axis = Vector3( 0, 0, 1 )
flag_align_y = true
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel = -200.0
scale = 0.25
color_ramp = SubResource( 6 )

[sub_resource type="ParticleProcessMaterial" id=9]
emission_shape = 5
emission_ring_radius = 1.0
emission_ring_inner_radius = 1.0
emission_ring_height = 1.0
emission_ring_axis = Vector3( 0, 0, 1 )
flag_align_y = true
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel = 200.0
scale = 0.25
color_ramp = SubResource( 6 )

[node name="Teleport" type="Area2D" groups=["teleports"]]
script = SubResource( 3 )
once = false

[node name="Sprite2D" type="Sprite2D" parent="."]
modulate = Color( 1, 0.501961, 0.501961, 1 )
scale = Vector2( 0.125, 0.125 )
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Blink"
anims/Blink = SubResource( 1 )
anims/RESET = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )

[node name="Particles" type="Node2D" parent="."]
modulate = Color( 1, 0.3, 0.3, 1 )
z_index = 500
z_as_relative = false

[node name="IdleParticles" type="GPUParticles2D" parent="Particles"]
modulate = Color( 2, 2, 2, 1 )
z_index = 500
z_as_relative = false
amount = 10
process_material = SubResource( 7 )
texture = ExtResource( 2 )

[node name="InParticles" type="GPUParticles2D" parent="Particles"]
modulate = Color( 2, 2, 2, 1 )
z_index = 500
z_as_relative = false
emitting = false
amount = 50
lifetime = 0.5
one_shot = true
explosiveness = 0.5
process_material = SubResource( 8 )
texture = ExtResource( 2 )

[node name="OutParticles" type="GPUParticles2D" parent="Particles"]
modulate = Color( 2, 2, 2, 1 )
z_index = 500
z_as_relative = false
emitting = false
amount = 50
lifetime = 0.5
one_shot = true
explosiveness = 0.5
process_material = SubResource( 9 )
texture = ExtResource( 2 )

[node name="ZIndexer" type="Node" parent="Particles"]
script = ExtResource( 3 )
z_index = 500

[connection signal="player_entered" from="." to="." method="on_player_entered"]
[connection signal="player_exited" from="." to="." method="on_player_exited"]
