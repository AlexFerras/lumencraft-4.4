[gd_scene load_steps=8 format=2]

[ext_resource path="res://Nodes/Map/Generator/ChunkGenerators/BlobChunk.tscn" type="PackedScene" id=1]
[ext_resource path="res://Nodes/Map/Generator/ChunkGenerators/Rectangle.png" type="Texture2D" id=2]

[sub_resource type="FastNoiseLite" id=1]
resource_local_to_scene = true
period = 43.4
persistence = 0.281
lacunarity = 1.83

[sub_resource type="NoiseTexture" id=2]
resource_local_to_scene = true
width = 256
height = 256
noise = SubResource( 1 )

[sub_resource type="GDScript" id=3]
script/source = "tool
extends \"res://Nodes/Map/Generator/ChunkGenerators/BlobChunk.gd\"

func create_content(generator, pixel_map: PixelMap) -> Array:
	## TODO: zabezpieczyÄ‡ przez zamurowaniem gracza
	var content: Array
	content.append(create_object(\"Building\", \"Reactor\", Vector2(128, 128)))
	return content
"

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform float cut_off : hint_range(0.0, 1.0) = 0.5;
uniform float smoothness : hint_range(1.0, 5.0) = 1.0;

void fragment() {
	vec4 color = textureLod(TEXTURE, UV, smoothness);
	
	float r = 1.0 - step(color.r, cut_off);
	
	COLOR = vec4(r, r, r, 1.0);
}"

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/cut_off = 0.39
shader_param/smoothness = 1.0

[node name="NoiseChunk" instance=ExtResource( 1 )]
texture = SubResource( 2 )
script = SubResource( 3 )
filter_material = SubResource( 9 )

[node name="Circle" parent="." index="0"]
texture = ExtResource( 2 )
