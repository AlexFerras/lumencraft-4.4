[gd_scene load_steps=28 format=2]

[ext_resource path="res://Nodes/Player/Weapons/Melee/hammer_hilt.png" type="Texture2D" id=1]
[ext_resource path="res://Nodes/Player/Weapons/Melee/smash.png" type="Texture2D" id=2]
[ext_resource path="res://Nodes/Player/Weapons/Melee/hammer_head.png" type="Texture2D" id=3]

[sub_resource type="GDScript" id=22]
script/source = "extends \"res://Nodes/Player/Weapons/Melee/MeleeWeapon.gd\"

@onready var animator := $AnimationPlayer as AnimationPlayer
@onready var animator_charged := $AnimationPlayer2 as AnimationPlayer
@onready var collider := $Shaft/Area2D/CollisionShape2D as CollisionShape2D
@onready var hammerhead := $Shaft/HammerHead as Sprite2D
@onready var tip_collision := $Shaft/Marker2D as Marker2D


@onready var bzyts := [$Shaft/HammerHead/Smash,$Shaft/HammerHead/Smash2,$Shaft/HammerHead/Smash3]
@onready var bzyts_org_rot := [bzyts[0].rotation,bzyts[1].rotation,bzyts[2].rotation]

var combo := 0
var move_in_progress :bool = false
var attack_queued :bool = false
var initial_attack_charge: = 0.0
var initial_attack_charge_max: = 3.0
var is_charged :bool = false
var is_attacking: bool

var charged_tween: Tween

func _ready() -> void:
	init(Const.ItemIDs.HAMMER, $Shaft/Area2D)
#	connect(\"attacked\",self,\"on_hit_landed\")
	set_physics_process(false)
	Save.connect(\"unclocked_tech_number\", Callable(self, \"refresh_data\"))

func refresh_data(whatever, whateverr):
	data = player.get_upgraded_data(Const.Items[Const.ItemIDs.HAMMER])

func _physics_process(delta: float) -> void:
	set_process(false)
	
	var is_head_colliding := Utils.game.map.pixel_map.is_pixel_solid(tip_collision.global_position, Utils.player_bullet_collision_mask)
	if is_head_colliding:
		Utils.explode_circle(tip_collision.global_position, damage_data.damage*0.5, damage_data.damage * 100.0, 3, 3,-1)
		Utils.play_sample(Utils.random_sound(\"res://SFX/Bullets/bullet_impact_metal_light\"), self)

#	if move_in_progress:
#		pass

#	var direction = tip_collision.global_position - global_position
#	var ray := Utils.game.map.pixel_map.rayCastQTDistance(global_position, direction, direction.length(), Utils.player_bullet_collision_mask)
#	if ray:
#		var dig_step = (ray.hit_position - tip_collision.global_position).length() / 3.0
#		var dir_norm = direction.normalized()
#		var sumator := 0.0
#		while damage_data.damage > 0:
#			Utils.explode_circle(ray.hit_position + dir_norm * sumator, damage_data.damage*0.5, damage_data.damage * 100.0, 3, 3,-1)
#			sumator += dig_step
#			damage_data.damage -= 1 + damage_data.damage * 0.15
#		Utils.play_sample(Utils.random_sound(\"res://SFX/Bullets/bullet_impact_metal_light\"), self)
#		animator.play(\"Bounce_back\")

func play_bzyt(id:int):
	bzyts[id].get_node(\"AnimationPlayer\").play(\"bzyt\")
	bzyts[id].rotation = bzyts_org_rot[id] + randf_range(-0.25,0.25) * PI
	bzyts[id].scale.x = randf_range(0.5,1.0)
	bzyts[id].scale.y = bzyts[id].scale.x
	bzyts[id].frame = randi()%2
	bzyts[id].flip_v = bool(randi()%2)

func _process(delta: float) -> void:
	if is_charged:
		play_bzyt(randi()%3)
	if not player.tired:
		if player.is_shooting():
			is_attacking = true
			initial_attack_charge = min( initial_attack_charge + delta * data.custom_charge_speed, initial_attack_charge_max )
			if not move_in_progress:
				if combo == 0:
					animator.play(\"PrepareSwing\")
			else:
				combo = 0
		
		if player.is_just_not_shooting() and is_attacking:
			is_attacking = false
			use_stamina()
			if not move_in_progress:
				match combo:
					0:
						animator.play(\"Stab\")
						Utils.play_sample(Utils.random_sound(\"res://SFX/Weapons/Spear/whoosh_swish_high_fast_\"))
					1:
						animator.play(\"Swing_1\")
						Utils.play_sample(Utils.random_sound(\"res://SFX/Weapons/Spear/whoosh_swish_small_harsh_\"))
					2: 
						animator.play(\"Swing_2\")
						Utils.play_sample(Utils.random_sound(\"res://SFX/Weapons/Spear/whoosh_swish_small_harsh_\"))
					3: 
						animator.play(\"Swing_Round\")
						Utils.play_sample(Utils.random_sound(\"res://SFX/Weapons/Spear/whoosh_weapon_spin_\"))
	else:
		animator.queue(\"PutAway\")
		combo = 0
		
	if move_in_progress:
		pass

	else:
		if animator.current_animation == \"PrepareSwing\":
			if initial_attack_charge < initial_attack_charge_max:
				hammerhead.modulate = Color(1,1,1) + Color(1,1,1) * (2 * initial_attack_charge / initial_attack_charge_max)
				hammerhead.modulate.a = 1.0
				if initial_attack_charge >= (initial_attack_charge_max - 0.1) and not is_charged:
					charged()
			elif not charged_tween:
				blink()

func on_hit():
	Utils.get_audio_manager(\"flesh_hit\").play(tip_collision.global_position)

func charged()->void:
	animator_charged.play(\"Chrged\")
	Utils.play_sample(\"res://SFX/Weapons/Spear/charged3.wav\")
	is_charged = true 
	
func blink():
	charged_tween = create_tween().set_loops()
	charged_tween.tween_property(hammerhead,\"modulate\",Color(2,2,2,1),0.20)
	charged_tween.tween_property(hammerhead,\"modulate\",Color(2,1,1,1),0.20)

func put_away():
	animator.play(\"PutAway\")
	collider.disabled = true
	
func reset_combo():
	move_in_progress = false
	combo = 0

func toggle_move_in_progress():
	damage_data.damage = data.damage
	initial_attack_charge = 0.0
	is_charged = false
	if charged_tween:
		charged_tween.kill()
		charged_tween = null
		
	move_in_progress = not move_in_progress
	if move_in_progress:
		combo += 1
"

[sub_resource type="Animation" id=25]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/HammerHead/Smash:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 720 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shaft/HammerHead/Smash:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=26]
resource_name = "bzyt"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 261, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/HammerHead/Smash:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 720 ), Rect2( 0, 0, 523, 720 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shaft/HammerHead/Smash:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 0.1, 0.2 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 2, 2, 2, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=30]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash2:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=27]
resource_name = "bzyt"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash2:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 261, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/HammerHead/Smash2:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 720 ), Rect2( 0, 0, 523, 720 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shaft/HammerHead/Smash2:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 0.1, 0.2 ),
"transitions": PackedFloat32Array( -2, -2, -2 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 2, 2, 2, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=29]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash3:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=28]
resource_name = "bzyt"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead/Smash3:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 261, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/HammerHead/Smash3:region_rect")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0, 0.1 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ Rect2( 0, 0, 0, 720 ), Rect2( 0, 0, 523, 720 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shaft/HammerHead/Smash3:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 0.1, 0.2 ),
"transitions": PackedFloat32Array( -2, -2, -2 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 2, 2, 2, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="RectangleShape2D" id=23]
extents = Vector2( 8, 10.5 )

[sub_resource type="Gradient" id=18]
offsets = PackedFloat32Array( 0, 0.926148 )
colors = PackedColorArray( 2, 2, 2, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture2D" id=19]
gradient = SubResource( 18 )
width = 64

[sub_resource type="Curve" id=20]
_data = [ Vector2( 0, 1 ), 0.0, -2.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=21]
curve = SubResource( 20 )

[sub_resource type="ParticleProcessMaterial" id=16]
spread = 0.0
gravity = Vector3( 0, 0, 0 )
scale = 0.05
scale_curve = SubResource( 21 )
color = Color( 2, 2, 2, 1 )
color_ramp = SubResource( 19 )

[sub_resource type="Animation" id=11]
resource_name = "Bounce_back"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0.5 ),
"transitions": PackedFloat32Array( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( -2 ),
"update": 3,
"values": [ -10.0 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 2.5 ),
"transitions": PackedFloat32Array( 1 ),
"values": [ {
"args": [  ],
"method": "reset_combo"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Shaft/HammerHead:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( -2 ),
"update": 3,
"values": [ Vector2( -12, 2 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "PrepareSwing"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( -2 ),
"update": 3,
"values": [ -180.0 ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 1 ),
"transitions": PackedFloat32Array( 1 ),
"values": [ {
"args": [  ],
"method": "reset_combo"
} ]
}

[sub_resource type="Animation" id=6]
resource_name = "PutAway"
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0.5 ),
"transitions": PackedFloat32Array( -2 ),
"update": 3,
"values": [ -10.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0.5 ),
"transitions": PackedFloat32Array( -2 ),
"update": 3,
"values": [ Vector2( -12, 2 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0.5 ),
"transitions": PackedFloat32Array( 1 ),
"values": [ {
"args": [  ],
"method": "reset_combo"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Shaft/HammerHead:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0.1 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 1 ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Shaft/HammerHead:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Shaft/HammerHead:frame")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Shaft:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 10, 0 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Shaft:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 0.125, 0.125 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Shaft/HammerHead:scale")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath(".:scale")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( 0.75, 0.75 ) ]
}

[sub_resource type="Animation" id=4]
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0.45, 1.5, 2.97719 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ Color( 5, 5, 5, 1 ), Color( 5, 5, 5, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0, 0.6, 0.75 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ false, false, true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 0.75 ),
"transitions": PackedFloat32Array( 1, 1 ),
"values": [ {
"args": [  ],
"method": "toggle_move_in_progress"
}, {
"args": [  ],
"method": "toggle_move_in_progress"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Shaft/HammerHead:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0, 0.75 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ 3, 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0, 0.45, 1.2, 2.1 ),
"transitions": PackedFloat32Array( -2, -2, -2, -2 ),
"update": 0,
"values": [ Vector2( -10, 0 ), Vector2( 5, 0 ), Vector2( 5, 0 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=8]
resource_name = "Swing_1"
length = 3.3
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0.3, 1.5, 3.3 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ Color( 5, 5, 5, 1 ), Color( 5, 5, 5, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0.3, 1.35, 1.5 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 3,
"values": [ false, false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 0.3, 1.5 ),
"transitions": PackedFloat32Array( -2, -2, -2 ),
"update": 0,
"values": [ 0.0, -33.3621, 116.231 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0, 1.5 ),
"transitions": PackedFloat32Array( 1, 1 ),
"values": [ {
"args": [  ],
"method": "toggle_move_in_progress"
}, {
"args": [  ],
"method": "toggle_move_in_progress"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Shaft/HammerHead:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0.3, 1.5 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ 0, 1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PackedFloat32Array( 0.3, 1.5 ),
"transitions": PackedFloat32Array( -2, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( -14, 0 ) ]
}

[sub_resource type="Animation" id=9]
resource_name = "Swing_2"
length = 3.5
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0.2, 1.2, 2.2 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ Color( 5, 5, 5, 1 ), Color( 5, 5, 5, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0.2, 1.1, 1.2 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 3,
"values": [ false, false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0, 1.2 ),
"transitions": PackedFloat32Array( -2, -2 ),
"update": 0,
"values": [ 116.231, -66.7 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0, 1.2 ),
"transitions": PackedFloat32Array( 1, 1 ),
"values": [ {
"args": [  ],
"method": "toggle_move_in_progress"
}, {
"args": [  ],
"method": "toggle_move_in_progress"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Shaft/HammerHead:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0.2, 1.2 ),
"transitions": PackedFloat32Array( 1, 1 ),
"update": 0,
"values": [ 2, 1 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PackedFloat32Array( 0.2 ),
"transitions": PackedFloat32Array( -2 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=14]
resource_name = "Swing_Overhead"
length = 3.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0.2, 2.75, 3.2 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 0,
"values": [ Color( 5, 5, 5, 1 ), Color( 5, 5, 5, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0.2, 2.75, 2.9 ),
"transitions": PackedFloat32Array( 1, 1, 1 ),
"update": 3,
"values": [ false, false, true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0.2, 2.9 ),
"transitions": PackedFloat32Array( 0, 0 ),
"update": 0,
"values": [ 0.0, 0.0 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0, 2.9 ),
"transitions": PackedFloat32Array( 1, 1 ),
"values": [ {
"args": [  ],
"method": "toggle_move_in_progress"
}, {
"args": [  ],
"method": "toggle_move_in_progress"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PackedFloat32Array( 0.2, 2.9 ),
"transitions": PackedFloat32Array( -2, -2 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Shaft:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PackedFloat32Array( 0.2, 2.9 ),
"transitions": PackedFloat32Array( -2, -2 ),
"update": 0,
"values": [ Vector2( -0.125, 0.125 ), Vector2( 0.125, 0.125 ) ]
}

[sub_resource type="Animation" id=15]
resource_name = "Throw"
length = 0.1
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft/HammerHead:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Color( 5, 5, 5, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Shaft/HammerHead:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Shaft/Area2D/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Shaft:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PackedFloat32Array( 0 ),
"transitions": PackedFloat32Array( 1 ),
"update": 0,
"values": [ Vector2( -20, 0 ) ]
}

[sub_resource type="Animation" id=13]
length = 0.001

[sub_resource type="Animation" id=17]
resource_name = "test"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Shaft:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PackedFloat32Array( 0, 1, 1.9 ),
"transitions": PackedFloat32Array( -2, -2, -2 ),
"update": 0,
"values": [ Vector2( 10, 0 ), Vector2( 10, 30 ), Vector2( 10, 0 ) ]
}

[node name="Hammar" type="Node2D"]
scale = Vector2( 0.75, 0.75 )
z_index = 1
script = SubResource( 22 )

[node name="Shaft" type="Sprite2D" parent="."]
position = Vector2( 10, 0 )
scale = Vector2( 0.125, 0.125 )
texture = ExtResource( 1 )
offset = Vector2( 14, 5 )
flip_v = true

[node name="HammerHead" type="Sprite2D" parent="Shaft"]
position = Vector2( 256, 0 )
texture = ExtResource( 3 )
offset = Vector2( 0, -1 )
flip_v = true

[node name="Smash" type="Sprite2D" parent="Shaft/HammerHead"]
scale = Vector2( 0.8, 0.8 )
z_index = -1
texture = ExtResource( 2 )
vframes = 2
frame = 1
region_enabled = true
region_rect = Rect2( 0, 0, 0, 720 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Shaft/HammerHead/Smash"]
root_node = NodePath("../../../..")
anims/RESET = SubResource( 25 )
anims/bzyt = SubResource( 26 )

[node name="Smash2" type="Sprite2D" parent="Shaft/HammerHead"]
position = Vector2( 5.33334, -21.3333 )
rotation = -1.18911
scale = Vector2( 0.8, 0.8 )
z_index = -1
texture = ExtResource( 2 )
vframes = 2
region_enabled = true
region_rect = Rect2( 0, 0, 0, 720 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Shaft/HammerHead/Smash2"]
root_node = NodePath("../../../..")
anims/RESET = SubResource( 30 )
anims/bzyt = SubResource( 27 )

[node name="Smash3" type="Sprite2D" parent="Shaft/HammerHead"]
position = Vector2( -5.33331, 32 )
rotation = 1.25093
scale = Vector2( 0.8, 0.8 )
z_index = -1
texture = ExtResource( 2 )
vframes = 2
region_enabled = true
region_rect = Rect2( 0, 0, 0, 720 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Shaft/HammerHead/Smash3"]
root_node = NodePath("../../../..")
anims/RESET = SubResource( 29 )
anims/bzyt = SubResource( 28 )

[node name="Area2D" type="Area2D" parent="Shaft"]
position = Vector2( 170, 0 )
scale = Vector2( 8, 8 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Shaft/Area2D"]
position = Vector2( 10.75, 1.5 )
shape = SubResource( 23 )
disabled = true

[node name="Marker2D" type="Marker2D" parent="Shaft"]
position = Vector2( 262, 0 )
scale = Vector2( 8, 8 )

[node name="GPUParticles2D" type="GPUParticles2D" parent="Shaft"]
position = Vector2( 256, 11 )
z_index = -1
emitting = false
amount = 12
lifetime = 0.2
local_coords = false
draw_order = 1
process_material = SubResource( 16 )
texture = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "PutAway"
playback_speed = 5.0
method_call_mode = 1
anims/Bounce_back = SubResource( 11 )
anims/PrepareSwing = SubResource( 7 )
anims/PutAway = SubResource( 6 )
anims/RESET = SubResource( 3 )
anims/Stab = SubResource( 4 )
anims/Swing_1 = SubResource( 8 )
anims/Swing_2 = SubResource( 9 )
anims/Swing_Overhead = SubResource( 14 )
anims/Throw = SubResource( 15 )
next/Bounce_back = "PutAway"
next/Stab = "PutAway"
next/Swing_1 = "PutAway"
next/Swing_2 = "PutAway"
next/Swing_Overhead = "PutAway"

[node name="AnimationPlayer2" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 13 )
anims/test = SubResource( 17 )
