[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

func _ready() -> void:
	for i in range(1, 101):
		await generate_map(\"%03d\" % i).completed
	print(\"koniec\")

func generate_map(map: String):
	print(\"generowanie \" + map)
	var generator = load(\"res://Nodes/Map/Generator/GeneratedMapBase.tscn\").instantiate()
	
	generator.objective = 0
	generator.map_size = 2000
	generator.map_biome = 0
#	generator.wave_count = $\"%GenWaveCount\".value
#	generator.enemy_multiplier = $\"%GenEnemies\".value
#	generator.wave_multiplier = $\"%GenWavePower\".value
#	generator.wave_time_multiplier = $\"%GenWaveTime\".value
#	generator.item_multiplier = $\"%GenTreasures\".value
#	generator.objective_difficulty = $\"%GenObjectiveDifficullty\".value * 0.05
#	generator.starting_resources = $\"%GenStartingResources\".value
#	generator.resource_rate = $\"%GenResourceRate\".value
	
	Utils.add_child(generator)
	
	await generator.finished
	
	generator.map_file.save_to_file(\"res://Maps/Pregenerated/%s.lcmap\" % map)
	generator.queue_free()
"

[node name="Node2D" type="Node"]
script = SubResource( 1 )
