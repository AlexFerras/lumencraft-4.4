[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

func _ready() -> void:
	get_tree().paused = true
	
	var viewport := SubViewport.new()
	
	viewport.transparent_bg = true
	viewport.render_target_v_flip = true
	viewport.usage = SubViewport.USAGE_2D
	viewport.render_target_update_mode = SubViewport.UPDATE_ALWAYS
	viewport.size = Vector2(512, 512)
	viewport.process_mode = Node.PROCESS_MODE_PAUSABLE
	add_child(viewport)
	
	var texture: TextureRect = $\"%Texture2D\"
	texture.texture = ImageTexture.new()
	
	for enemy in Const.Enemies.values():
		if not enemy.is_swarm:
			continue
		
		var instance = load(enemy.scene).instantiate()
		obliterate_scripts(instance)
		instance.scale = Vector2(4, 4)
		instance.position = Vector2(256, 256)
		viewport.add_child(instance)
		
		await RenderingServer.frame_post_draw
		instance.queue_free()
		
		var image := viewport.get_texture().get_data()
		false # image.lock() # TODOConverter3To4, Image no longer requires locking, `false` helps to not break one line if/else, so it can freely be removed
		
		var min_x = INF
		var min_y = INF
		var max_x = -INF
		var max_y = -INF
		
		for x in image.get_width():
			for y in image.get_height():
				if image.get_pixel(x, y).a >= 0.2:
					min_x = min(min_x, x)
					min_y = min(min_y, y)
					max_x = max(max_x, x)
					max_y = max(max_y, y)
		
		false # image.unlock() # TODOConverter3To4, Image no longer requires locking, `false` helps to not break one line if/else, so it can freely be removed
		
		var image2 := Image.new()
		image2.create(max_x - min_x, max_y - min_y, false, Image.FORMAT_RGBA8)
		
		false # image2.lock() # TODOConverter3To4, Image no longer requires locking, `false` helps to not break one line if/else, so it can freely be removed
		image2.blit_rect(image, Rect2(Vector2(min_x, min_y), image2.get_size()), Vector2())
		false # image2.unlock() # TODOConverter3To4, Image no longer requires locking, `false` helps to not break one line if/else, so it can freely be removed
		
		texture.texture.create_from_image(image2)
		
		image2.save_png(enemy.placeholder_sprite)
	
	get_tree().quit()

func obliterate_scripts(node: Node):
	node.set_script(null)
	for n in node.get_children():
		obliterate_scripts(n)
"

[sub_resource type="StyleBoxFlat" id=2]
draw_center = false
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color( 1, 1, 1, 1 )

[node name="IconGenerator" type="Node2D"]
process_mode = 3
script = SubResource( 1 )

[node name="CenterContainer" type="CenterContainer" parent="."]
offset_left = 25.0
offset_top = 23.0
offset_right = 1892.0
offset_bottom = 1063.0

[node name="PanelContainer" type="PanelContainer" parent="CenterContainer"]
offset_left = 931.0
offset_top = 518.0
offset_right = 935.0
offset_bottom = 522.0
theme_override_styles/panel = SubResource( 2 )

[node name="Texture2D" type="TextureRect" parent="CenterContainer/PanelContainer"]
unique_name_in_owner = true
offset_left = 2.0
offset_top = 2.0
offset_right = 2.0
offset_bottom = 2.0
stretch_mode = 4
