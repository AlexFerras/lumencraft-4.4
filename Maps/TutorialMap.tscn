[gd_scene load_steps=72 format=3 uid="uid://dck4r53f7ikcr"]

[ext_resource type="PackedScene" uid="uid://dpyvffuv7or1r" path="res://Nodes/Enemies/Wednesday/Frog.tscn" id="1"]
[ext_resource type="Script" uid="uid://bsgilpyj66uwx" path="res://Nodes/Map/MapPixelMap.gd" id="2"]
[ext_resource type="Material" path="res://Resources/Materials/FloorMaterial_4tex.tres" id="3"]
[ext_resource type="Texture2D" uid="uid://byg4ev6hkhqbu" path="res://Nodes/Lights/Textures/SmoothCircle.png" id="4"]
[ext_resource type="Script" uid="uid://b7iwybyqv3h8d" path="res://Nodes/Lights/LightSprite.gd" id="5"]
[ext_resource type="PackedScene" uid="uid://d6qa8rvrll26" path="res://Nodes/Map/MapDarkness.tscn" id="6"]
[ext_resource type="PackedScene" uid="uid://bjbmagecijmuj" path="res://Nodes/Buildings/Reactor/Reactor.tscn" id="7"]
[ext_resource type="Texture2D" uid="uid://b4cgebnqklfox" path="res://Nodes/Pickups/Resources/LumenCrystalNewIcon22.png" id="8"]
[ext_resource type="Script" uid="uid://xs5ltfae4pxy" path="res://Scripts/GenericInteractable.gd" id="9"]
[ext_resource type="FontFile" path="res://Resources/Fonts/Font25.tres" id="10"]
[ext_resource type="PackedScene" path="res://Nodes/Pickups/MetalNuggetPickup.tscn" id="11"]
[ext_resource type="PackedScene" uid="uid://dtmi1woj8mrtr" path="res://Resources/Anarchy/Scenes/UIElements/UltimateTooltip.tscn" id="12"]
[ext_resource type="Texture2D" uid="uid://dkscelhm0u1jm" path="res://Nodes/Map/Objects/FakeComputer.png" id="13"]
[ext_resource type="Script" uid="uid://d02gj0atagnro" path="res://Nodes/Map/Map.gd" id="14"]
[ext_resource type="FontFile" path="res://Resources/Anarchy/Fonts/spacemono_regular_minimal_border.tres" id="15"]
[ext_resource type="PackedScene" path="res://Nodes/Objects/Hole/Hole.tscn" id="16"]
[ext_resource type="Environment" path="res://Resources/Misc/MapEnvironment.tres" id="17"]
[ext_resource type="Script" uid="uid://ch7xa5chd3t6f" path="res://Scripts/PlayerDetector.gd" id="18"]
[ext_resource type="PackedScene" uid="uid://f0nd7uyhpbea" path="res://Nodes/Buildings/Wall/Wall.tscn" id="19"]
[ext_resource type="PackedScene" path="res://Nodes/Map/ZIndexer.tscn" id="20"]
[ext_resource type="PackedScene" uid="uid://dhhs3mswk07aj" path="res://Nodes/Buildings/Pylon/Pylon.tscn" id="21"]
[ext_resource type="PackedScene" path="res://Nodes/Objects/Chest/Chest.tscn" id="22"]
[ext_resource type="PackedScene" uid="uid://cxl2d7hvlhtj" path="res://Nodes/Buildings/Lab/Lab.tscn" id="23"]
[ext_resource type="PackedScene" path="res://Nodes/Buildings/Workshop/Weapon/PistolWorkshop.tscn" id="24"]
[ext_resource type="PackedScene" path="res://Nodes/Pickups/SimplePickup.tscn" id="25"]
[ext_resource type="PackedScene" path="res://Nodes/Enemies/Spawners/WaveSpawner.tscn" id="26"]
[ext_resource type="PackedScene" uid="uid://dtosfrhar0lmg" path="res://Nodes/Buildings/Turret/MachinegunTurret.tscn" id="27"]
[ext_resource type="Script" uid="uid://ckrx0gpldih4h" path="res://Nodes/Map/FloorPixelMap.gd" id="28"]
[ext_resource type="PackedScene" path="res://Nodes/Buildings/Tower/Tower.tscn" id="30"]
[ext_resource type="PackedScene" uid="uid://bj4gg5axcj1up" path="res://Nodes/Buildings/Shredder/Shredder.tscn" id="31"]
[ext_resource type="PackedScene" path="res://Nodes/Pickups/LumenClumpPickup.tscn" id="32"]
[ext_resource type="PackedScene" path="res://Nodes/Objects/LumenCrystal/LumenCrystal.tscn" id="33"]
[ext_resource type="PackedScene" path="res://Nodes/Buildings/Workshop/Weapon/DrillWorkshop.tscn" id="35"]
[ext_resource type="PackedScene" uid="uid://ewnpetvqc3ke" path="res://Nodes/Objects/Map/LavaSource.tscn" id="36"]
[ext_resource type="PackedScene" path="res://Nodes/Objects/Deco/Laptop.tscn" id="37"]
[ext_resource type="PackedScene" path="res://Nodes/Buildings/Tower/Stand.tscn" id="38"]
[ext_resource type="PackedScene" path="res://Nodes/Effects/DarknessByDistance.tscn" id="39"]
[ext_resource type="PackedScene" uid="uid://cjec1w7jjg6qq" path="res://Nodes/Buildings/Wall/Gate.tscn" id="40"]
[ext_resource type="PackedScene" uid="uid://bdg7657lftmg" path="res://Nodes/Objects/OreVein/MetalVein.tscn" id="41"]
[ext_resource type="PackedScene" uid="uid://c3q7gtt7e26cr" path="res://Nodes/Effects/SmokeBigFog.tscn" id="42"]
[ext_resource type="PackedScene" path="res://Nodes/Objects/Chest/RustyChest.tscn" id="43"]
[ext_resource type="PackedScene" path="res://Nodes/Buildings/HeroCenter/HeroCenter.tscn" id="44"]
[ext_resource type="PackedScene" uid="uid://dliqw060kp6ru" path="res://Nodes/Objects/Helper/InGameMarker/InGameMarker.tscn" id="45"]
[ext_resource type="Material" path="res://Resources/Materials/FloorMaterial2.tres" id="47"]

[sub_resource type="PixelMapMaterialData" id="36"]
resource_local_to_scene = true
name_table = PackedStringArray("Dirt", "Clay", "Rocks", "Poor Metal", "Metal", "Rich Metal", "Rock6", "Rock9", "Foam", "Steel", "Fireproof Foam", "Unused", "Concrete", "Unused", "Unused", "Unused", "Unused", "Unnamed", "Unnamed", "Unnamed", "Low building", "Wall", "Upgraded Wall", "Upgraded II Wall", "Tar", "Empty", "Dead Lumen", "Lumen", "Gate", "Water", "Lava", "Unnamed", "Building", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed", "Unnamed")
durability_table = PackedInt32Array(1, 5, 100, 1, 3, 9, 6, 9, 1, 8, 1, 1, 80, 2, 2, 1, 1, 2, 1, 1, 255, 2, 4, 6, 1, 1, 25, 1, 254, 1, 1, 1, 9999, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
simulated_materials = PackedInt32Array(15, 16)
reaction_table = PackedInt32Array(15, 16, 14)

[sub_resource type="Gradient" id="23"]
colors = PackedColorArray(0.25, 0.25, 0.25, 0, 1, 0.419608, 0.117647, 0)

[sub_resource type="PixelMapMaterialData" id="1"]

[sub_resource type="PixelMapMaterialData" id="33"]

[sub_resource type="GDScript" id="10"]
script/source = "extends Marker2D

func _ready() -> void:
	get_tree().create_timer(1).connect(\"timeout\", Callable(self, \"queue_free\"))
"

[sub_resource type="GDScript" id="5"]
resource_name = "Tutorial"
script/source = "extends CanvasLayer

enum {
	OBJECTIVE_REACTOR,
	OBJECTIVE_CHEST,
	OBJECTIVE_PISTOL,
	OBJECTIVE_METAL,
	OBJECTIVE_VEIN,
	OBJECTIVE_STORAGE,
	OBJECTIVE_DRILL_UPGRADE,
	OBJECTIVE_PYLON1,
	OBJECTIVE_SHREDDER,
	OBJECTIVE_LAB,
	OBJECTIVE_PYLON2,
	OBJECTIVE_LAB_USE,
	OBJECTIVE_SCOUT,
	OBJECTIVE_REPAIR,
	OBJECTIVE_TURRET,
	OBJECTIVE_SPEED,
	OBJECTIVE_SURVIVE,
}

const OBJECTIVE_LIST = {
	OBJECTIVE_REACTOR: \"Start the reactor.\",
	OBJECTIVE_CHEST: \"Get items from the chest.\",
	OBJECTIVE_PISTOL: \"Make a pistol and some ammo at the workshop.\",
	OBJECTIVE_METAL: \"Dig up the metal and Lumen deposit.\",
	OBJECTIVE_VEIN: \"Interact with the metal vein to build a Miner.\",
	OBJECTIVE_STORAGE: \"Place a Storage Container next to the Miner.\",
	OBJECTIVE_DRILL_UPGRADE: \"Use the other workshop to upgrade your drill twice.\",
	OBJECTIVE_PYLON1: \"Use build menu to place a Power Expander to power buildings.\",
	OBJECTIVE_SHREDDER: \"Get a Lumen Clump, select it in inventory and throw at the Shredder.\",
	OBJECTIVE_LAB: \"Use your upgraded drill to reach the Lab.\",
	OBJECTIVE_PYLON2: \"Put another Power Expander to power the Lab.\",
	OBJECTIVE_LAB_USE: \"Research any tech at the Lab.\",
	OBJECTIVE_SCOUT: \"Upgrade any stat at the Scout Center.\",
	OBJECTIVE_REPAIR: \"Use the Repair Gun to repair damaged structures.\",
	OBJECTIVE_TURRET: \"Upgrade any turret.\",
	OBJECTIVE_SPEED: \"You are now ready to face the enemies. You can use Reactor to shorten the waiting time.\",
	OBJECTIVE_SURVIVE: \"Survive.\",
}

const MARKERS = {
	OBJECTIVE_REACTOR: \"Reactor\",
	OBJECTIVE_CHEST: \"Chest\",
	OBJECTIVE_PISTOL: \"Pistol\",
	OBJECTIVE_METAL: \"Metal\",
	OBJECTIVE_VEIN: \"Vein\",
	OBJECTIVE_STORAGE: \"Storage\",
	OBJECTIVE_DRILL_UPGRADE: \"DrillUpgrade\",
	OBJECTIVE_PYLON1: \"Pylon1\",
	OBJECTIVE_SHREDDER: \"Shredder\",
	OBJECTIVE_LAB: \"Lab\",
	OBJECTIVE_PYLON2: \"Pylon2\",
	OBJECTIVE_LAB_USE: \"Lab\",
	OBJECTIVE_SCOUT: \"Scout\",
	OBJECTIVE_REPAIR: \"RepairGun\",
	OBJECTIVE_TURRET: \"Turret\",
	OBJECTIVE_SPEED: \"Speed\",
	OBJECTIVE_SURVIVE: \"\",
}

@onready var reactor := $\"%Reactor\"
@onready var laptops := $\"%Laptops\"
@onready var markers := $\"%Markers\"

var current_objective: int = -1
var finished_objectives: Array

var wait_build: bool
var wait_throw: bool
var wait_inventory: bool

func _init() -> void:
	Save.block_save_by(\"tutorial\")
	Utils.game.sandbox_options.drop_items = false

func _ready() -> void:
	Utils.game.map.wave_manager.connect(\"wave_starting\", Callable(self, \"finish_objective\").bind(OBJECTIVE_SPEED))
	Utils.game.map.wave_manager.connect(\"wave_defeated\", Callable(self, \"win_map\"))
	node(\"ShredderStalker\").start()
	
	laptops.get_parent().call_deferred(\"remove_child\", laptops)
	node(\"Build\").hide()
	node(\"Throw\").hide()
	node(\"Manage\").hide()
	Save.clones = 99
	Save.connect(\"unclocked_tech_number\", Callable(self, \"check_tech\"))
	Save.connect(\"tech_unlocked\", Callable(self, \"on_tech\"))
	
	Utils.game.main_player.connect(\"full_inventory\", Callable(self, \"on_full\"))
	for i in 2:
		Utils.game.main_player.upgrade_max_stacks()
	
	if Music.is_game_build():
		set_process_input(false)

func hide_controls(player) -> void:
	node(\"Controls2\").queue_free()
	node(\"Drill\").queue_free()
	markers.get_node(\"Dig\").hide()

func on_reactor_starting() -> void:
	create_tween().set_process_mode(Tween.TWEEN_PROCESS_PHYSICS).tween_method(Callable(self, \"reveal_core\"), 1, 500, 1)

func on_reactor_started() -> void:
	finish_objective(OBJECTIVE_REACTOR)
	get_parent().add_child(laptops)

func on_node_added(node: Node):
	if node.name == \"BuildMenu\":
		node(\"Build\").queue_free()
		get_tree().disconnect(\"node_added\", Callable(self, \"on_node_added\"))

func reveal_core(size):
	Utils.game.map.pixel_map.fog_of_war.clear_circular_area(reactor.global_position, size, Color(1, 1, 1, 0.03))

var _node_cache: Dictionary

func node(n: String) -> Node:
	if not n in _node_cache:
		_node_cache[n] = owner.find_child(n)
		if _node_cache[n]:
			var killer := preload(\"res://Scripts/ObjectKiller.gd\").new()
			killer.target = self
			killer.data = n
			_node_cache[n].add_child(killer)
	
	return _node_cache[n]

func _notification(what: int) -> void:
	if what == NOTIFICATION_PREDELETE:
		if is_instance_valid(laptops):
			laptops.free()

func first_objective(dupa) -> void:
	$Controls/Drill2.hide()
	next_objective()

func next_objective():
	while current_objective == -1 or current_objective in finished_objectives:
		current_objective += 1
	
	if current_objective == OBJECTIVE_LIST.size():
		Utils.game.win()
		Utils.game.ui.show_result(true)
		SteamAPI.unlock_achievement(\"TUTORIAL_FINISHED\", true)
		return
	
	Utils.game.ui.set_objective(current_objective, OBJECTIVE_LIST[current_objective])
	
	set_visible_marker(MARKERS[current_objective])
	
	if current_objective == OBJECTIVE_PISTOL:
		node(\"InventoryScanner\").start()
	
	if current_objective == OBJECTIVE_METAL:
		node(\"ScrapScanner\").start()
	
	if current_objective == OBJECTIVE_VEIN:
		var chest = get_node_or_null(\"%VeinChest\")
		if chest:
			var seq := create_tween().set_loops()
			seq.tween_property(chest, \"modulate\", Color(2, 2, 2), 0.1)
			seq.tween_property(chest, \"modulate\", Color.WHITE, 0.1)
			seq.tween_interval(1)
	
	if current_objective == OBJECTIVE_STORAGE:
		$StorageStalker.start()
		if node(\"Build\"):
			node(\"Build\").show()
			wait_build = true
	
	if current_objective == OBJECTIVE_PYLON1:
		node(\"RunningStalker\").start()
	
	if current_objective == OBJECTIVE_SHREDDER:
		if node(\"Throw\"):
			node(\"Throw\").show()
			wait_throw = true
	
	if current_objective == OBJECTIVE_PYLON2:
		node(\"RunningStalker2\").start()
	
	if current_objective == OBJECTIVE_REPAIR:
		node(\"TurretStalker\").start()
		node(\"UnlimitedRepair\").show()
	
	if current_objective == OBJECTIVE_TURRET:
		node(\"UnlimitedRepair\").hide()
		if not get_parent().find_child(\"OMachinegunTurret3\"):
			if not get_parent().find_child(\"OMachinegunTurret2\"):
				node(\"Turret\").global_position = get_parent().find_child(\"OMachinegunTurret\").global_position
			else:
				node(\"Turret\").global_position = get_parent().find_child(\"OMachinegunTurret2\").global_position

func finish_objective(idx):
	if idx is String:
		idx = get(idx)
		assert(idx != null)
	
	if idx in finished_objectives:
		return
	
	Utils.log_message(\"Finished tutorial objective %s\" % idx)
	finished_objectives.append(idx)
	if idx == current_objective:
		next_objective()

func kill_callback(data):
	_node_cache.erase(data)

func _input(event: InputEvent) -> void:
	if event is InputEventKey and event.pressed and event.keycode == KEY_F5:
		reactor.start()
		if current_objective == 4:
			Save.set_unlocked_tech(str(Const.ItemIDs.DRILL, \"drilling_power\"), 2)
		current_objective += 1
		next_objective()

func check_tech(tech, level):
	if tech == str(Const.ItemIDs.DRILL, \"drilling_power\") and level >= 2:
		finish_objective(OBJECTIVE_DRILL_UPGRADE)
		Save.disconnect(\"unclocked_tech_number\", Callable(self, \"check_tech\"))

func lab_arrive(dupa) -> void:
	finish_objective(OBJECTIVE_LAB)

func on_tech(tech):
	if Utils.game.time_from_start < 10:
		return
	
	finish_objective(OBJECTIVE_LAB_USE)

func _physics_process(delta: float) -> void:
	if wait_build and Utils.game.main_player.is_action_just_pressed(\"build\"):
		node(\"Build\").queue_free()
		wait_build = false
	
	if wait_throw and Utils.game.main_player.is_action_just_pressed(\"throw_item\"):
		node(\"Throw\").queue_free()
		wait_throw = false
	
	if wait_inventory and Utils.game.main_player.is_action_just_pressed(\"inventory\"):
		node(\"Manage\").queue_free()
		wait_inventory = false
	
	if node(\"Manage\") and node(\"Manage\").visible:
		node(\"Manage\").global_position = Utils.game.main_player.global_position + Vector2.RIGHT * 16

func on_full():
	if node(\"Manage\"):
		node(\"Manage\").show()
		wait_inventory = true

func win_map():
	finish_objective(OBJECTIVE_SURVIVE)

func set_visible_marker(selected_marker: String):
	for marker in markers.get_children():
		marker.visible = marker.name == selected_marker

func show_ml(dupaaaaaa) -> void:
	node(\"Drill2\").show()
"

[sub_resource type="RectangleShape2D" id="22"]
size = Vector2(973.334, 106.667)

[sub_resource type="RectangleShape2D" id="29"]
size = Vector2(866.666, 766.666)

[sub_resource type="RectangleShape2D" id="20"]
size = Vector2(300, 67.7)

[sub_resource type="GDScript" id="35"]
script/source = "extends Node2D

func _on_Timer_timeout() -> void:
	if not visible:
		return
	
	for player in Utils.game.players:
		if player.get_item_count(Const.ItemIDs.REPAIR_KIT) > 0:
			return
	
	for object in Utils.game.map.pickup_tracker.getTrackingNodes2DInCircle(Vector2(), 999999, false):
		if object.name.find(\"Chest\") > -1:
			for item in object.pickups:
				if item.id == Const.ItemIDs.REPAIR_KIT:
					return
		
		if object is Pickup and object.id == Const.ItemIDs.REPAIR_KIT:
			return
	
	Pickup.launch({id = Const.ItemIDs.REPAIR_KIT, amount = 30}, global_position, Vector2())
"

[sub_resource type="GDScript" id="25"]
resource_name = "InventoryScanner"
script/source = "extends Timer

signal successed

func _ready() -> void:
	connect(\"timeout\", Callable(self, \"scan\"))

func scan():
	if Utils.game.main_player.get_item_count(Const.ItemIDs.MAGNUM) >= 1 and Utils.game.main_player.get_item_count(Const.ItemIDs.AMMO, Const.Ammo.BULLETS) >= 1:
		emit_signal(\"successed\")
		stop()
"

[sub_resource type="GDScript" id="27"]
resource_name = "ScrapScanner"
script/source = "extends Timer

signal successed

@onready var where := $ReferenceRect as Control

func scan() -> void:
	var histogram := Utils.game.map.pixel_map.get_materials_histogram_rect(where.get_rect())
	var percent := histogram[Const.Materials.WEAK_SCRAP] / where.get_rect().get_area()
	percent += histogram[Const.Materials.LUMEN] / where.get_rect().get_area()
	
	if percent <= 0.25:
		emit_signal(\"successed\")
		stop()
"

[sub_resource type="GDScript" id="24"]
resource_name = "RunningStalker"
script/source = "extends Timer

@export var target: NodePath

signal successed

func _ready() -> void:
	connect(\"timeout\", Callable(self, \"stalk\"))

func stalk():
	if not get_node_or_null(target):
		stop()
		print(\"debil\")
		return
	
	if get_node(target).is_running:
		emit_signal(\"successed\")
		stop()
"

[sub_resource type="GDScript" id="38"]
resource_name = "StorageStalker"
script/source = "extends Timer

@export var target: NodePath

signal successed

func _ready() -> void:
	connect(\"timeout\", Callable(self, \"stalk\"))

func stalk():
	for building in Utils.game.map.common_buildings_tracker.getTrackingNodes2DInCircle($\"%Storage\".global_position, 50, false):
		if building.building_name == \"Storage Container\":
			emit_signal(\"successed\")
			stop()
"

[sub_resource type="GDScript" id="26"]
resource_name = "ShredderStalker"
script/source = "extends Timer

@export var target: NodePath

signal successed

func _ready() -> void:
	connect(\"timeout\", Callable(self, \"stalk\"))

func stalk():
	if not get_node_or_null(target):
		stop()
		print(\"debil\")
		return
	
	if not get_node(target).items.is_empty():
		emit_signal(\"successed\")
		stop()
"

[sub_resource type="GDScript" id="32"]
resource_name = "RunningStalker"
script/source = "extends Timer

@export var target: NodePath
@export var target2: NodePath

var sub_target: int

signal successed

func _ready() -> void:
	connect(\"timeout\", Callable(self, \"stalk\"))

func stalk():
	match sub_target:
		0:
			if not get_node_or_null(target) and not get_node_or_null(target2):
				end()
				return
			
			for player in Utils.game.players:
				if player.get_item_count(Const.ItemIDs.REPAIR_KIT) > 0:
					sub_target += 1
					get_parent().set_visible_marker(\"Fixme1\")
		1:
			if not get_node_or_null(target) or get_node(target).hp >= get_node(target).max_hp * 0.9:
				sub_target += 1
				get_parent().set_visible_marker(\"Fixme2\")
		2:
			if not get_node_or_null(target2) or get_node(target2).hp >= get_node(target2).max_hp * 0.9:
				end()

func end():
	emit_signal(\"successed\")
	stop()
"

[sub_resource type="GDScript" id="15"]
resource_name = "FakeComputer"
script/source = "extends Sprite2D

@export_node_path(\"Node\") var reactor

@onready var label: Label = $CenterContainer/VBoxContainer/Status

var timer := 0.0
var player_in: bool

signal started
signal finished

func _ready() -> void:
	Utils.game.map.pixel_map.update_material_mask_rotated(global_position, texture.get_image(), Const.Materials.STOP, Vector3(scale.x, scale.y, global_rotation), 0xFFFFFFFF, 255)

func _on_PlayerDetector_player_entered(player) -> void:
	player.interactables.append(self)

func _on_PlayerDetector_player_exited(player) -> void:
	player.interactables.erase(self)

func on_interacted(player) -> void:
	if player.get_item_count(Const.ItemIDs.LUMEN) < 10:
		Utils.play_sample(\"res://SFX/Building/InterfaceFail.wav\")
		Utils.game.ui.set_objective(0, \"Look around and find 10 Lumens to start the reactor.\", true)
		return
	else:
		player.subtract_item(Const.ItemIDs.LUMEN, 10)
	
	label.get_parent().modulate.a = 1.0
	$CenterContainer/VBoxContainer/Required.queue_free()
	
	Utils.play_sample(\"res://SFX/Building/InterfaceAccept.wav\")
	player.interactables.clear()
	player.interactable_icon.call_deferred(\"hide\")
	
	$PlayerDetector.queue_free()
	
	label.text = \"Starting...\"
	label.modulate = Color.YELLOW
	
	reactor.start()
	$LightSprite.queue_free()
	$AnimationPlayer.queue_free()
	emit_signal(\"started\")
	
	await reactor.get_node(\"AnimationPlayer\").animation_finished
	
	label.text = \"Running\"
	label.modulate = Color.GREEN
	emit_signal(\"finished\")
"

[sub_resource type="RectangleShape2D" id="16"]
size = Vector2(327.242, 248.628)

[sub_resource type="Animation" id="17"]
length = 1.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("LightSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(2, 2, 0.5),
"update": 0,
"values": [Color(1, 0, 0, 1), Color(1, 0, 0, 1), Color(2, 0, 0, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("CenterContainer/VBoxContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.75),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="18"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("LightSprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 0, 0, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("CenterContainer/VBoxContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mrnd5"]
_data = {
&"Mig": SubResource("17"),
&"RESET": SubResource("18")
}

[sub_resource type="RectangleShape2D" id="19"]
size = Vector2(282.586, 151.184)

[sub_resource type="GDScript" id="28"]
resource_name = "UpgradeHacker"
script/source = "extends Node

func _ready() -> void:
	await get_parent().ready
	return
	# TODO 
	var target = get_parent().stands.get_child(1)
	target.upgrades[0].cost[0].amount /= 2
	target.stands.get_child(1).upgrades[1].cost[0].amount /= 2
	target.stands.get_child(1).upgrades[1] = get_parent().stands.get_child(1).upgrades[1].duplicate()
	target.stands.get_child(1).upgrades[1].requirements = []
"

[sub_resource type="GDScript" id="34"]
resource_name = "DestructionHacker"
script/source = "extends Node

func _ready() -> void:
	get_parent().hp = 99999
	get_parent().set_meta(\"do_not\", true)
"

[sub_resource type="GDScript" id="31"]
resource_name = "DestructionHacker"
script/source = "@tool
extends Node2D

@export var radius := 20.0: set = set_radius

var timer: float

func _ready() -> void:
	if Engine.is_editor_hint():
		set_process(false)
		return

func _process(delta: float) -> void:
	Utils.explode_circle_no_debris(global_position, radius, 500, 5, 99999)
	timer += delta
	if timer >= 0.5:
		queue_free()

func set_radius(r):
	radius = r
	queue_redraw()

func _draw():
	if Engine.is_editor_hint():
		draw_circle(Vector2(), radius, Color(1, 0, 0, 0.5))
"

[sub_resource type="GDScript" id="30"]
resource_name = "HPHacker"
script/source = "extends Node

func _ready() -> void:
	await get_parent().ready
	get_parent().hp -= 100
	get_parent().refresh_hp()
"

[sub_resource type="GDScript" id="37"]
script/source = "extends \"res://Scripts/MapEvents.gd\"

func _config_map(config: Dictionary):
	config.technology = {}
	config.technology[\"magnet_upgrade\"] = 1
	config.technology[\"lab_speed\"] = 1
	config.technology[\"lab_speed2\"] = 1
#	config.technology[\"reactor_more_hp\"] = 1
"

[node name="Map" type="Node2D"]
z_as_relative = false
script = ExtResource("14")
wave_file_path = "res://Maps/TutorialWaves.cfg"

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("17")

[node name="PixelMap" type="PixelMap" parent="."]
process_priority = 100
z_index = 500
z_as_relative = false
material_data = SubResource("36")
texture_path = "res://Maps/TutorialMap.png"
debug_flags = 4
script = ExtResource("2")
custom_materials = Array[Resource]([null, null, null, null, null, null])

[node name="PixelMapPhysics" type="PixelMapPhysics" parent="PixelMap"]

[node name="MapDarkness" parent="PixelMap" instance=ExtResource("6")]
ambient_color = Color(0.6, 0.6, 0.6, 1)

[node name="DarknessByDistance" parent="PixelMap" instance=ExtResource("39")]
max_distance = 450.0
lava_gradient = SubResource("23")

[node name="Smoke" parent="PixelMap" instance=ExtResource("42")]
position = Vector2(-278.649, 198.169)
scale = Vector2(1489, 802)

[node name="ZIndexer" parent="PixelMap" instance=ExtResource("20")]
z_index = 500

[node name="Floor" type="PixelMap" parent="."]
process_priority = 100
z_index = -2000
z_as_relative = false
material = ExtResource("3")
scale = Vector2(8, 8)
fake_pixel_map = true
material_data = SubResource("1")
texture_path = "res://Maps/TutorialFloor.png"
debug_flags = 4
script = ExtResource("28")
textures = Array[Resource]([null, null, null, null])

[node name="ZIndexer" parent="Floor" instance=ExtResource("20")]
z_index = -1000
offset = -1000

[node name="Floor2" type="PixelMap" parent="."]
process_priority = 100
z_index = -4096
z_as_relative = false
material = ExtResource("47")
scale = Vector2(8, 8)
fake_pixel_map = true
material_data = SubResource("33")
debug_flags = 4
script = ExtResource("28")
default_color = Color(0, 0, 0, 0)
textures = Array[Resource]([null, null, null, null])
layer = 2

[node name="Start" type="Marker2D" parent="."]
position = Vector2(362, 931)
script = SubResource("10")

[node name="Markers" type="Node2D" parent="."]
unique_name_in_owner = true

[node name="Dig" parent="Markers" instance=ExtResource("45")]
position = Vector2(494, 828)

[node name="Reactor" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(470, 381)

[node name="Chest" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(273, 420)

[node name="Pistol" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(499, 519)

[node name="Metal" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(304, 597)

[node name="Vein" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(111, 610)

[node name="Storage" parent="Markers" instance=ExtResource("45")]
unique_name_in_owner = true
visible = false
position = Vector2(161, 610)

[node name="DrillUpgrade" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(625, 423)

[node name="Pylon1" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(659, 365)

[node name="Shredder" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(721, 426)

[node name="Lab" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(134, 191)

[node name="Pylon2" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(324, 273)

[node name="Scout" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(74, 280)

[node name="RepairGun" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(665, 241)

[node name="Fixme1" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(676, 270)

[node name="Fixme2" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(718, 332)

[node name="Turret" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(678, 271)

[node name="Speed" parent="Markers" instance=ExtResource("45")]
visible = false
position = Vector2(503, 246)

[node name="Tutorial" type="CanvasLayer" parent="."]
layer = 2
follow_viewport_enabled = true
script = SubResource("5")

[node name="Controls" type="Control" parent="Tutorial"]
layout_mode = 3
anchors_preset = 0
scale = Vector2(0.125, 0.125)

[node name="Controls2" type="VBoxContainer" parent="Tutorial/Controls"]
layout_mode = 0
offset_left = 4128.0
offset_top = 7208.0
offset_right = 4440.0
offset_bottom = 7412.0

[node name="Move" parent="Tutorial/Controls/Controls2" instance=ExtResource("12")]
layout_mode = 2
size_flags_horizontal = 0
action = "move"
text = "Move"

[node name="Dash" parent="Tutorial/Controls/Controls2" instance=ExtResource("12")]
layout_mode = 2
size_flags_horizontal = 0
action = "run"
text = "Dash (hold to run)"

[node name="Drill" type="VBoxContainer" parent="Tutorial/Controls"]
layout_mode = 0
offset_left = 2715.24
offset_top = 6586.38
offset_right = 2994.24
offset_bottom = 6788.38

[node name="Primary" parent="Tutorial/Controls/Drill" instance=ExtResource("12")]
layout_mode = 2
size_flags_horizontal = 0
action = "shoot"
text = "Use Primary Item"

[node name="2" parent="Tutorial/Controls/Drill" instance=ExtResource("12")]
layout_mode = 2
size_flags_horizontal = 0
action = "shoot2"
text = "Use Secondary Item"

[node name="Drill2" type="VBoxContainer" parent="Tutorial/Controls"]
visible = false
layout_mode = 0
offset_left = 4728.0
offset_top = 6200.0
offset_right = 5138.0
offset_bottom = 6382.0

[node name="Drill2" type="PanelContainer" parent="Tutorial/Controls/Drill2"]
layout_mode = 2
theme_type_variation = &"0001_yellow_border"

[node name="Label2" type="Label" parent="Tutorial/Controls/Drill2/Drill2"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_fonts/font = ExtResource("15")
text = "Metal and Lumen"
uppercase = true

[node name="Primary" parent="Tutorial/Controls/Drill2" instance=ExtResource("12")]
layout_mode = 2
size_flags_horizontal = 0
action = "shoot"
text = "Triple press to enable auto-drilling"

[node name="Build" parent="Tutorial/Controls" instance=ExtResource("12")]
layout_mode = 0
offset_left = 1032.0
offset_top = 5184.0
offset_right = 1236.0
offset_bottom = 5283.0
action = "build"
text = "Open Build Menu"

[node name="Throw" parent="Tutorial/Controls" instance=ExtResource("12")]
layout_mode = 0
offset_left = 6144.0
offset_top = 3360.0
offset_right = 6348.0
offset_bottom = 3459.0
action = "throw_item"
text = "Drop Item"

[node name="Manage" type="VBoxContainer" parent="Tutorial/Controls"]
layout_mode = 0
offset_right = 204.0
offset_bottom = 202.0

[node name="Inventory" parent="Tutorial/Controls/Manage" instance=ExtResource("12")]
layout_mode = 2
action = "inventory"
text = "Inventory"

[node name="Throw" parent="Tutorial/Controls/Manage" instance=ExtResource("12")]
layout_mode = 2
action = "throw_item"
text = "Drop Item"

[node name="Control" type="Control" parent="Tutorial"]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
pivot_offset = Vector2(216, 144)

[node name="StartReactor" type="Area2D" parent="Tutorial/Control"]
position = Vector2(642, 627)
scale = Vector2(0.3, 0.3)
script = ExtResource("18")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Tutorial/Control/StartReactor"]
shape = SubResource("22")

[node name="LabReach" type="Area2D" parent="Tutorial/Control"]
visible = false
position = Vector2(137, 229)
scale = Vector2(0.3, 0.3)
script = ExtResource("18")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Tutorial/Control/LabReach"]
position = Vector2(0, 73.3333)
shape = SubResource("29")

[node name="ControlsTrigger" type="Area2D" parent="Tutorial/Control"]
position = Vector2(647, 761)
scale = Vector2(0.3, 0.3)
script = ExtResource("18")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Tutorial/Control/ControlsTrigger"]
position = Vector2(-510, 283.334)
shape = SubResource("20")

[node name="M&LTrigger" type="Area2D" parent="Tutorial/Control"]
position = Vector2(675, 805)
rotation = 0.523598
scale = Vector2(0.3, 0.3)
script = ExtResource("18")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Tutorial/Control/M&LTrigger"]
position = Vector2(-510, 283.334)
shape = SubResource("20")

[node name="UnlimitedRepair" type="Node2D" parent="Tutorial/Control"]
visible = false
position = Vector2(665, 242)
script = SubResource("35")

[node name="Timer" type="Timer" parent="Tutorial/Control/UnlimitedRepair"]
autostart = true

[node name="InventoryScanner" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("25")

[node name="ScrapScanner" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("27")

[node name="ReferenceRect" type="ReferenceRect" parent="Tutorial/ScrapScanner"]
offset_left = 226.0
offset_top = 529.0
offset_right = 377.0
offset_bottom = 679.0

[node name="RunningStalker" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("24")
target = NodePath("../../Base/Shredder")

[node name="StorageStalker" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("38")

[node name="ShredderStalker" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("26")
target = NodePath("../../Base/Shredder")

[node name="RunningStalker2" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("24")
target = NodePath("../../Base/Lab")

[node name="TurretStalker" type="Timer" parent="Tutorial"]
wait_time = 0.5
script = SubResource("32")
target = NodePath("../../Base/OMachinegunTurret")
target2 = NodePath("../../Base/OMachinegunTurret2")

[node name="Reactor" parent="." instance=ExtResource("7")]
unique_name_in_owner = true
position = Vector2(470.55, 319)
RANGE = 200

[node name="Base" type="Node2D" parent="."]

[node name="FakeComputer" type="Sprite2D" parent="Base"]
position = Vector2(471.55, 392)
scale = Vector2(0.1, 0.1)
texture = ExtResource("13")
script = SubResource("15")
reactor = NodePath("../../Reactor")

[node name="CenterContainer" type="CenterContainer" parent="Base/FakeComputer"]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -324.129
offset_top = -197.158
offset_right = -26.1289
offset_bottom = -2.1582

[node name="VBoxContainer" type="VBoxContainer" parent="Base/FakeComputer/CenterContainer"]
layout_mode = 2
theme_override_constants/separation = 16

[node name="Status" type="Label" parent="Base/FakeComputer/CenterContainer/VBoxContainer"]
modulate = Color(1, 0, 0, 1)
layout_mode = 2
theme_override_fonts/font = ExtResource("10")
text = "Offline"
horizontal_alignment = 1

[node name="Required" type="HBoxContainer" parent="Base/FakeComputer/CenterContainer/VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="Label" type="Label" parent="Base/FakeComputer/CenterContainer/VBoxContainer/Required"]
modulate = Color(1, 0, 0, 1)
layout_mode = 2
theme_override_fonts/font = ExtResource("10")
text = "10x"

[node name="TextureRect" type="TextureRect" parent="Base/FakeComputer/CenterContainer/VBoxContainer/Required"]
custom_minimum_size = Vector2(40, 0)
layout_mode = 2
texture = ExtResource("8")
expand_mode = 1
stretch_mode = 6

[node name="Label2" type="Label" parent="Base/FakeComputer/CenterContainer/VBoxContainer/Required"]
modulate = Color(1, 0, 0, 1)
layout_mode = 2
theme_override_fonts/font = ExtResource("10")
text = "required"

[node name="StaticBody2D" type="StaticBody2D" parent="Base/FakeComputer"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Base/FakeComputer/StaticBody2D"]
shape = SubResource("16")

[node name="LightSprite" type="Node2D" parent="Base/FakeComputer"]
modulate = Color(1, 0, 0, 1)
position = Vector2(2.80469, 15.9258)
scale = Vector2(0.2, 0.3)
script = ExtResource("5")
texture = ExtResource("4")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Base/FakeComputer"]
libraries = {
&"": SubResource("AnimationLibrary_mrnd5")
}
autoplay = "Mig"

[node name="PlayerDetector" type="Area2D" parent="Base/FakeComputer"]
position = Vector2(0, 213.071)
script = ExtResource("9")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Base/FakeComputer/PlayerDetector"]
shape = SubResource("19")

[node name="LumenCrystal" parent="Base" instance=ExtResource("33")]
position = Vector2(781, 515)
rotation = -0.0994117
scale = Vector2(0.508584, 0.508584)

[node name="LumenCrystal2" parent="Base" instance=ExtResource("33")]
position = Vector2(527, 586)
rotation = 0.171921
scale = Vector2(0.318697, 0.318697)

[node name="LumenCrystal3" parent="Base" instance=ExtResource("33")]
position = Vector2(433, 431)
rotation = 0.785397
scale = Vector2(0.16996, 0.16996)

[node name="DrillWorkshop" parent="Base" instance=ExtResource("35")]
position = Vector2(606, 407)

[node name="UpgradeHacker" type="Node" parent="Base/DrillWorkshop"]
script = SubResource("28")

[node name="DestructionHacker" type="Node" parent="Base/DrillWorkshop"]
script = SubResource("34")

[node name="Wall" parent="Base" instance=ExtResource("19")]
position = Vector2(690, 247)
rotation = 1.01023

[node name="DestructionHacker" type="Node2D" parent="Base/Wall"]
z_index = 999
position = Vector2(-100.305, 14.9606)
rotation = -1.01023
script = SubResource("31")
radius = 10.0

[node name="DestructionHacker2" type="Node2D" parent="Base/Wall"]
z_index = 999
position = Vector2(-64.1645, 17.5758)
rotation = -1.01023
script = SubResource("31")
radius = 10.0

[node name="Wall3" parent="Base" instance=ExtResource("19")]
position = Vector2(626, 182)
rotation = 0.613741

[node name="DestructionHacker3" type="Node2D" parent="Base/Wall3"]
z_index = 999
position = Vector2(81.9339, 3.43945)
rotation = -0.613741
script = SubResource("31")
radius = 10.0

[node name="DestructionHacker4" type="Node2D" parent="Base/Wall3"]
z_index = 999
position = Vector2(117.512, 38.3136)
rotation = -0.613741
script = SubResource("31")
radius = 10.0

[node name="Wall2" parent="Base" instance=ExtResource("19")]
position = Vector2(754, 314)
rotation = 0.643078

[node name="DestructionHacker5" type="Node2D" parent="Base/Wall2"]
z_index = 999
position = Vector2(-40.5954, -10.8172)
rotation = -0.643078
script = SubResource("31")
radius = 10.0

[node name="DestructionHacker6" type="Node2D" parent="Base/Wall2"]
z_index = 999
position = Vector2(-13.6022, 5.19424)
rotation = -0.643078
script = SubResource("31")
radius = 10.0

[node name="DestructionHacker7" type="Node2D" parent="Base/Wall2"]
z_index = 999
position = Vector2(10.2027, -6.39566)
rotation = -0.643078
script = SubResource("31")
radius = 10.0

[node name="Wall5" parent="Base" instance=ExtResource("19")]
position = Vector2(926, 379)
rotation = 0.261799

[node name="Lab" parent="Base" instance=ExtResource("23")]
position = Vector2(133, 190)

[node name="DestructionHacker" type="Node" parent="Base/Lab"]
script = SubResource("34")

[node name="Pylon" parent="Base" instance=ExtResource("21")]
position = Vector2(695, 307)

[node name="Pylon8" parent="Base" instance=ExtResource("21")]
position = Vector2(763.299, 366.4)

[node name="Pylon4" parent="Base" instance=ExtResource("21")]
position = Vector2(294, 394)

[node name="Pylon5" parent="Base" instance=ExtResource("21")]
position = Vector2(250, 475)

[node name="Pylon6" parent="Base" instance=ExtResource("21")]
position = Vector2(161, 502)

[node name="Pylon7" parent="Base" instance=ExtResource("21")]
position = Vector2(111, 539)

[node name="Pylon2" parent="Base" instance=ExtResource("21")]
position = Vector2(247, 238)

[node name="Pylon3" parent="Base" instance=ExtResource("21")]
position = Vector2(154, 258)

[node name="Tower" parent="Base" instance=ExtResource("30")]
position = Vector2(751, 357)
rotation = -1.0472

[node name="Tower2" parent="Base" instance=ExtResource("30")]
position = Vector2(577, 465)
rotation = 1.0472

[node name="Tower3" parent="Base" instance=ExtResource("30")]
position = Vector2(210, 212)
rotation = 0.785397

[node name="OMachinegunTurret" parent="Base" instance=ExtResource("27")]
position = Vector2(345, 462)
rotation = 1.80728

[node name="DestructionHacker" type="Node" parent="Base/OMachinegunTurret"]
script = SubResource("34")

[node name="Shredder" parent="Base" instance=ExtResource("31")]
position = Vector2(721, 427)

[node name="DestructionHacker" type="Node" parent="Base/Shredder"]
script = SubResource("34")

[node name="Stand" parent="Base" instance=ExtResource("38")]
position = Vector2(663, 306)

[node name="OMachinegunTurret2" parent="Base" instance=ExtResource("27")]
position = Vector2(718, 334)
rotation = -0.896469

[node name="HPHacker" type="Node" parent="Base/OMachinegunTurret2"]
script = SubResource("30")

[node name="OMachinegunTurret3" parent="Base" instance=ExtResource("27")]
position = Vector2(676, 272)
rotation = -0.669203

[node name="HPHacker" type="Node" parent="Base/OMachinegunTurret3"]
script = SubResource("30")

[node name="PistolWorkshop" parent="Base" instance=ExtResource("24")]
position = Vector2(501, 500)

[node name="DestructionHacker" type="Node" parent="Base/PistolWorkshop"]
script = SubResource("34")

[node name="Gate" parent="Base" instance=ExtResource("40")]
position = Vector2(834, 353)
rotation = 0.312201

[node name="HeroCenter" parent="Base" instance=ExtResource("44")]
position = Vector2(72, 283)

[node name="DestructionHacker" type="Node" parent="Base/HeroCenter"]
script = SubResource("34")

[node name="Loot" type="Node2D" parent="."]

[node name="Chest" parent="Loot" instance=ExtResource("22")]
position = Vector2(273, 420)
rotation = -0.523598
metadata/pickup_container = true

[node name="SimplePickup" parent="Loot/Chest" instance=ExtResource("25")]
item = "DYNAMITE"
amount = 3

[node name="SimplePickup2" parent="Loot/Chest" instance=ExtResource("25")]
amount = 60

[node name="Chest2" parent="Loot" instance=ExtResource("22")]
position = Vector2(665, 242)
rotation = 1.03082
metadata/pickup_container = true

[node name="SimplePickup" parent="Loot/Chest2" instance=ExtResource("25")]
item = "REPAIR_KIT"
amount = 50

[node name="LumenClump" parent="Loot" instance=ExtResource("32")]
position = Vector2(860, 508)
buried = true

[node name="LumenClump4" parent="Loot" instance=ExtResource("32")]
position = Vector2(894, 547)

[node name="LumenClump5" parent="Loot" instance=ExtResource("32")]
position = Vector2(694, 506)

[node name="VeinChest" parent="Loot" instance=ExtResource("43")]
unique_name_in_owner = true
position = Vector2(114, 658)
rotation = 1.0472

[node name="SimplePickup2" parent="Loot/VeinChest" instance=ExtResource("25")]
item = "LUMEN"
amount = 25

[node name="SimplePickup3" parent="Loot/VeinChest" instance=ExtResource("25")]
item = "METAL_SCRAP"
amount = 25

[node name="RustyChest2" parent="Loot" instance=ExtResource("43")]
position = Vector2(129, 264)
rotation = 0.410609

[node name="SimplePickup2" parent="Loot/RustyChest2" instance=ExtResource("25")]
amount = 30

[node name="SimplePickup3" parent="Loot/RustyChest2" instance=ExtResource("25")]
item = "LUMEN"
amount = 30

[node name="RustyChest3" parent="Loot" instance=ExtResource("43")]
position = Vector2(205, 756)
rotation = -0.523598

[node name="SimplePickup" parent="Loot/RustyChest3" instance=ExtResource("25")]
item = "SPEAR"

[node name="MetalNugget" parent="Loot" instance=ExtResource("11")]
position = Vector2(949, 537)

[node name="MetalNugget2" parent="Loot" instance=ExtResource("11")]
position = Vector2(885, 582)

[node name="WaveSpawner" parent="." instance=ExtResource("26")]
position = Vector2(831, 181)
radius = 40.0

[node name="Hole" parent="." instance=ExtResource("16")]
position = Vector2(272, 625)
total_monsters = 12

[node name="LavaSource" parent="." instance=ExtResource("36")]
position = Vector2(139.529, 799.421)
fluid_radius = 140.0
fluid_dmg_materials_mask = 402653183
fluid_dmg_durability_threshold = 4
fluid_dmg = 4
fluid_is_simulated = true

[node name="Laptop5" parent="." instance=ExtResource("37")]
position = Vector2(424, 888)
message = "Welcome to the tutorial. Drill your way north to start. Your ultimate goal is to defend base from incoming wave of enemies. There will be objectives to guide you, but feel free to do things in any order."

[node name="Laptops" type="Node2D" parent="."]
unique_name_in_owner = true

[node name="Laptop" parent="Laptops" instance=ExtResource("37")]
position = Vector2(757, 466)
message = "Shredder can be used to extract Lumen Clumps. Just drop the items in it."

[node name="Laptop7" parent="Laptops" instance=ExtResource("37")]
position = Vector2(127, 315)
message = "Use Lab and Scout Center to permanently upgrade your character and other aspects. You can check your acquired technologies in the Map menu. In co-op, Scout Center upgrades only the player who built it, so each player needs their own."

[node name="Laptop3" parent="Laptops" instance=ExtResource("37")]
position = Vector2(661, 436)
message = "Upgrade your drill to mine stronger materials. You need 2 upgrades to get past the green rocks in the west."

[node name="Laptop6" parent="Laptops" instance=ExtResource("37")]
position = Vector2(548, 528)
message = "Here you can make weapon and ammo to defend yourself."

[node name="Laptop5" parent="Laptops" instance=ExtResource("37")]
position = Vector2(538, 238)
message = "You can speed up the wave here if you don't want to wait."

[node name="Laptop4" parent="Laptops" instance=ExtResource("37")]
position = Vector2(319, 415)
message = "Explosives are useful for quick mining."

[node name="Laptop10" parent="Laptops" instance=ExtResource("37")]
position = Vector2(148, 571)
message = "If you put a Storage Container next to a Miner, it will automatically collect resources. Stored resources are automatically used when your inventory is not enough."

[node name="Laptop9" parent="Laptops" instance=ExtResource("37")]
position = Vector2(439, 564)
message = "You can make more Flares and other useful items when you place Utility Workshop."

[node name="Laptop2" parent="Laptops" instance=ExtResource("37")]
position = Vector2(672, 522)
message = "Buildings need to be powered to work. Place some Power Expanders where necessary."

[node name="Laptop8" parent="Laptops" instance=ExtResource("37")]
position = Vector2(389, 234)
message = "When you die, a clone replaces your dead character. If you don't have spares, it's game over. Note that normally you drop all items on death; this is disabled in the tutorial."

[node name="MetalVein" parent="." instance=ExtResource("41")]
position = Vector2(110, 611)

[node name="Frog" parent="." instance=ExtResource("1")]
position = Vector2(993, 994)

[node name="MapEvents" type="Node" parent="."]
script = SubResource("37")

[connection signal="player_entered" from="Tutorial/Control/StartReactor" to="Tutorial" method="first_objective"]
[connection signal="player_entered" from="Tutorial/Control/LabReach" to="Tutorial" method="lab_arrive"]
[connection signal="player_entered" from="Tutorial/Control/ControlsTrigger" to="Tutorial" method="hide_controls"]
[connection signal="player_entered" from="Tutorial/Control/M&LTrigger" to="Tutorial" method="show_ml"]
[connection signal="timeout" from="Tutorial/Control/UnlimitedRepair/Timer" to="Tutorial/Control/UnlimitedRepair" method="_on_Timer_timeout"]
[connection signal="successed" from="Tutorial/InventoryScanner" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_PISTOL"]]
[connection signal="successed" from="Tutorial/ScrapScanner" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_METAL"]]
[connection signal="timeout" from="Tutorial/ScrapScanner" to="Tutorial/ScrapScanner" method="scan"]
[connection signal="successed" from="Tutorial/RunningStalker" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_PYLON1"]]
[connection signal="successed" from="Tutorial/StorageStalker" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_STORAGE"]]
[connection signal="successed" from="Tutorial/ShredderStalker" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_SHREDDER"]]
[connection signal="successed" from="Tutorial/RunningStalker2" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_PYLON2"]]
[connection signal="successed" from="Tutorial/TurretStalker" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_REPAIR"]]
[connection signal="finished" from="Base/FakeComputer" to="Tutorial" method="on_reactor_started"]
[connection signal="started" from="Base/FakeComputer" to="Tutorial" method="on_reactor_starting"]
[connection signal="interacted" from="Base/FakeComputer/PlayerDetector" to="Base/FakeComputer" method="on_interacted"]
[connection signal="upgraded" from="Base/OMachinegunTurret" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_TURRET"]]
[connection signal="upgraded" from="Base/OMachinegunTurret2" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_TURRET"]]
[connection signal="upgraded" from="Base/OMachinegunTurret3" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_TURRET"]]
[connection signal="upgraded" from="Base/HeroCenter" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_SCOUT"]]
[connection signal="opened" from="Loot/Chest" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_CHEST"]]
[connection signal="opened" from="Loot/Chest2" to="Markers/RepairGun" method="hide"]
[connection signal="miner_placed" from="MetalVein" to="Tutorial" method="finish_objective" binds= ["OBJECTIVE_VEIN"]]
