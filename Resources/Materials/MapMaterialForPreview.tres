[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=69]
code = "shader_type canvas_item;

uniform float contrast = 8.5;

// All components are in the range [0…1], including hue.
vec3 rgb2hsv(vec3 c)
{
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

// All components are in the range [0…1], including hue.
vec3 hsv2rgb(vec3 c)
{
	c.r=c.g*contrast;
	c.g+=0.0;
	c.b+=0.0;
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void fragment() {
	vec4 color =texture(TEXTURE,UV);
	COLOR.rgb = hsv2rgb(rgb2hsv(vec3(1.0,color.g,1.0)));
	COLOR.rgb *= color.r;
//	COLOR.rgb = vec3(COLOR.g*80.0);
	}"

[resource]
shader = SubResource( 69 )
shader_param/contrast = 80.0
