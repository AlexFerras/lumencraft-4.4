[gd_scene load_steps=8 format=2]

[ext_resource path="res://Scenes/Title/Background.png" type="Texture2D" id=1]
[ext_resource path="res://Resources/Anarchy/Scenes/UIElements/UltimateTooltip.tscn" type="PackedScene" id=2]
[ext_resource path="res://Resources/Anarchy/Fonts/spacemono_bold_hellotext.tres" type="FontFile" id=3]
[ext_resource path="res://Nodes/Editor/Icons/Player.png" type="Texture2D" id=4]
[ext_resource path="res://Nodes/Buildings/Workshop/Sprites/Upgrade.png" type="Texture2D" id=5]
[ext_resource path="res://Resources/Anarchy/Fonts/spacemono_bold_summary_title.tres" type="FontFile" id=12]

[sub_resource type="GDScript" id=2]
script/source = "extends Control

enum {NAME = 0, VALUE = 2}

@onready var containers := $\"%Items\"
@onready var audio := $AudioStreamPlayer

var delay: float
var current_table: int
var current_value: int
var pause: bool
var end: bool
var total: int
var time: int

var clear_bonus := 25
var multiplier := 1.0
var scoring_rules: Dictionary
var score_keys: Array

var score_prefab: PackedScene

var best: bool
var global_rank: int = -1
var old_score: int = -1
signal score_loaded

var timer: Tween
var save_slot: String

func _ready():
	SteamAPI.connect(\"requested_scores\", Callable(self, \"on_loaded_scores\"))
	
	time = Save.game_time
	$\"%MapName\".text = Save.get_current_map_name()
	$\"%Uploading\".hide()
	$\"%Rank\".hide()
	$\"%RankUp\".hide()
	
	if not Save.cheated:
		$\"%Cheat\".hide()
	
	score_prefab = Prefab.create(containers.get_child(0))
	
	Music.stop()
	$\"%Zachent\".hide()
	$\"%Continue\".hide()
	$\"%TheBest\".hide()
	$\"%TotalScore\".hide()
	get_tree().set_auto_accept_quit(false)
	get_tree().paused = false
	
	scoring_rules = Utils.get_meta(\"scoring_rules\")
	Utils.remove_meta(\"scoring_rules\")
	
	if \"_clear_bonus\" in scoring_rules:
		clear_bonus = scoring_rules._clear_bonus
		scoring_rules.erase(\"_clear_bonus\")
	$\"%ClearBonusValue\".text = str(clear_bonus)
	
	score_keys = scoring_rules.keys()
	score_keys.erase(\"time\")
	score_keys.insert(0, \"time\")
	
	for score in score_keys:
		var container: Control = score_prefab.instantiate()
		containers.add_child(container)
		
		container.get_child(NAME).text = tr(score.capitalize()) + \":\"
		container.get_child(VALUE).text = get_current_value_string(score, 0)
	
	total += Save.scoreboard.get(\"_starting_score\", 0)
	
	if Save.map_completed:
		$\"%ClearBonus\".raise()
	else:
		$\"%ClearBonus\".queue_free()
		
		var dir := DirAccess.new()
		if Utils.safe_open(dir, \"user://Saves\"):
			var newest: int
			dir.list_dir_begin() # TODOConverter3To4 fill missing arguments https://github.com/godotengine/godot/pull/40547
			
			var f := dir.get_next()
			while not f.is_empty():
				if dir.current_is_dir():
					var file := dir.get_current_dir().plus_file(f).plus_file(\"data.tres\")
					if ResourceLoader.exists(file):
						var data: SaveData = load(file)
						var mod := File.new().get_modified_time(file)
						
						if data.save_uid == Save.data.save_uid and mod > newest:
							newest = mod
							save_slot = f
				
				f = dir.get_next()
	
	if Save.data.difficulty == Const.Difficulty.NORMAL:
		$\"%DifficultyMultiplier\".queue_free()
	else:
		$\"%DifficultyMultiplier\".raise()
		multiplier = Const.DIFFICULTY_SCORE_MULTIPLIERS[Save.data.difficulty]
		$\"%DifficultyMultiplierValue\".text += str(multiplier)
	
	if save_slot.is_empty():
		$\"%Reload\".hide()
	
	if Save.map_completed and Save.current_map.begins_with(\"res://Maps\"):
		Save.player_data.add_completed_map(Save.current_map)
	
	if Save.campaign:
		$\"%Quit\".text = \"Back to Hub\"
		if Save.map_completed:
			$\"%Retry\".hide()

func _process(delta: float) -> void:
	if pause:
		return
	
	delay -= delta
	if delay <= 0:
		delay = 0.05
		
		var table_name: String = score_keys[current_table]
		var score: int = Save.scoreboard.get(table_name, 0)
		Utils.play_sample(preload(\"res://SFX/UI/CountPoint.wav\"), audio)
		
		var inc: int = max(score * delay / 3.0, 1)
		
		if Save.campaign or Input.is_action_pressed(\"ui_accept\") or Input.is_action_pressed(\"ui_cancel\") or Input.is_action_pressed(\"p1_shoot\"):
			inc = 999999999
		
		current_value = min(current_value + inc, score)
		
		var container = containers.get_child(current_table)
		container.get_child(VALUE).text = get_current_value_string(table_name, current_value)
		
		if current_value == score:
			total += current_value * scoring_rules[table_name]
			current_table += 1
			current_value = 0
			
			Utils.play_sample(\"res://SFX/UI/PointSum.wav\", audio)
			pause = true
			await audio.finished
			pause = false
			
			if current_table == scoring_rules.size():
				if Save.map_completed:
					total *= 1 + (clear_bonus / 100.0)
				
				pause = true
				await get_tree().create_timer(1).timeout
				
				Utils.play_sample(\"res://SFX/Explosion/explosion_small_01.wav\", audio)
				if Save.cheated and not Save.campaign:
					total = -1
				
				total *= multiplier
				
				if total > 367460:
					SteamAPI.unlock_achievement(\"SOLAR_SCORE\")
				
				$\"%TotalValue\".text = str(total)
				$\"%TotalScore\".show()
				
				var map: String = Save.current_map.get_file().get_basename()
				if Save.data.ranked and SteamAPI.initialized:
					timer = create_tween()
					timer.tween_interval(30)
					timer.tween_callback(Callable(self, \"upload_failed\"))
					$\"%Uploading\".show()
					SteamAPI.load_leaderboard(map, 0, 1, 1)
					await self.score_loaded
					SteamAPI.store_score(map, total, time, Save.map_completed)
					await SteamAPI.singleton.leaderboard_score_uploaded
					if global_rank > 0:
						await get_tree().create_timer(0.5).timeout
					SteamAPI.load_leaderboard(map, 0, 1, 1)
					await self.score_loaded
					timer.kill()
					$\"%Uploading\".hide()
				elif not Save.campaign:
					var local_scores := ConfigFile.new()
					var previous_score: int = -2
					var uid = Utils.get_map_uid(Save.current_map)
					
					if local_scores.load(\"user://local_scores.cfg\") == OK:
						previous_score = local_scores.get_value(\"\", uid, -2)
					
					if total > previous_score:
						local_scores.set_value(\"\", uid, total)
						best = true
					
					local_scores.save(\"user://local_scores.cfg\")
				else:
					var olds = Save.campaign.level_scores.get(Save.campaign.current_map, 0)
					best = total > olds
				
				if best:
					$\"%TheBest\".show()
				
				if Save.campaign:
					var rewards: Dictionary = Save.campaign.complete_current_level(total)
					$\"%Rewards\".show()
					var stop: bool
					for i in $\"%RewardContainer\".get_child_count():
						var reward_label: Label = $\"%RewardContainer\".get_child(i)
						
						if i >= rewards.size() or stop:
							if i == 0:
								reward_label.text = \"None\"
							else:
								reward_label.hide()
						else:
							if rewards.values()[i] is bool:
								var reward_name = rewards.keys()[i]
								if reward_name in Const.Technology:
									reward_name = Const.Technology[reward_name].name
								else:
									stop = true
								reward_label.text = reward_name
							else:
								reward_label.text = \"%s x%d\" % [Utils.get_item_name({id = rewards.keys()[i]}), rewards.values()[i]]
				
				end = true
				if not Save.cheated and not (Save.campaign and Save.map_completed):
					$\"%Zachent\".show()
				$\"%Continue\".show()
				
				if not (Save.data.ranked and SteamAPI.initialized) and best:
					generate_scorecard()

func _input(event: InputEvent) -> void:
	if not end or not event.is_pressed():
		return
	
	if event.is_action(\"ui_cancel\"):
		continuu()
	elif event.is_action(\"restart\"):
		retry()
	elif event.is_action(\"reload_save\"):
		reload()

func _notification(what: int) -> void:
	if what == NOTIFICATION_WM_QUIT_REQUEST:
		if Music.is_demo_build():
			Save.map_completed = false
			get_tree().change_scene_to_file(\"res://Scenes/Demo/Ad.tscn\")
		else:
			get_tree().quit()

var clicked: bool

func continuu() -> void:
	if clicked:
		return
	clicked = true
	
	Save.map_completed = false ## niepotrzebne raczej
	
	if Music.is_demo_build():
		get_tree().change_scene_to_file(\"res://Scenes/Demo/Ad.tscn\")
	elif Save.campaign:
		var loading = preload(\"res://Scenes/Campaign/gnidaoLrotavelE.tscn\").instantiate()
		Utils.add_child(loading)
		loading.start()
		Utils.set_meta(\"loading_background\", loading)
		
		var l = preload(\"res://Scenes/ScreenLoading.tscn\").instantiate()
		Utils.add_child(l)
		await RenderingServer.frame_post_draw
		l.queue_free()
		
		queue_free()
		Save.campaign_cleanup()
		Game.start_map(\"res://Maps/Campaign/Hub.tscn\")
	else:
		get_tree().create_timer(0.1).connect(\"timeout\", Callable(Utils, \"change_scene_with_loading\").bind(Const.TITLE_SCENE))

func retry() -> void:
	if not $\"%Retry\".visible:
		return
	
	if clicked:
		return
	clicked = true
	
	var ranked = Save.data.ranked
	var achievements_enabled = Save.data.achievements_enabled
	var options = Save.sandbox_options
	var map = Save.current_map
	var campaign = Save.campaign
	
	if campaign and map == \"user://campaign.lcmap\":
		var f = MapFile.new()
		f.load_from_file(map)
		map = f
		campaign.configure_map(map, {})
	
	Save.new_game()
	Save.data.ranked = ranked
	Save.data.achievements_enabled = achievements_enabled
	Save.sandbox_options = options
	Save.campaign = campaign
	
	var loading = preload(\"res://Scenes/ScreenLoading.tscn\").instantiate()
	Utils.add_child(loading)
	await RenderingServer.frame_post_draw
	loading.queue_free()
	
	Game.start_map(map)
	queue_free()

func reload() -> void:
	if save_slot.is_empty():
		return
	
	if clicked:
		return
	clicked = true
	
	var loading = preload(\"res://Scenes/ScreenLoading.tscn\").instantiate()
	Utils.add_child(loading)
	await RenderingServer.frame_post_draw
	loading.queue_free()
	
	Save.load_game(save_slot)
	queue_free()

func generate_scorecard():
	var scoreboard: Dictionary = Save.scoreboard.duplicate()
	for key in scoreboard.keys():
		if scoring_rules.get(key, 0) == 0 and key != \"time\":
			scoreboard.erase(key)
	
	Utils.generate_scorecard(Save.get_current_map_name(), total, scoreboard, Utils.get_map_uid(Save.current_map), Save.map_completed)

func on_loaded_scores(scores: Array):
	if global_rank == -1:
		if scores.is_empty():
			global_rank = -2
		else:
			global_rank = scores.front().global_rank
			old_score = scores.front().score
	else:
		var score_data: Dictionary = scores.front()
		if score_data.score > old_score:
			best = true
		
		$\"%Rank\".show()
		$\"%RankLabel\".text = \"%s/%s\" % [score_data.global_rank, SteamAPI.singleton.getLeaderboardEntryCount()]
		
		if global_rank > 0 and score_data.global_rank < global_rank:
			$\"%RankUp\".show()
			$\"%RankUpValue\".text = str(global_rank - score_data.global_rank)
			
	
	emit_signal(\"score_loaded\")

func upload_failed():
	$\"%Uploading\".show()
	$\"%Uploading\".text = \"Upload failed\"
	$\"%Uploading\".modulate = Color.RED
	
	generate_scorecard()
	end = true
	if not Save.cheated:
		$\"%Zachent\".show()
	$\"%Continue\".show()

func get_current_value_string(table: String, value: int) -> String:
	var base_string: String
	if table == \"time\":
		base_string = \"%01d:%02d:%02d\" % [value / 3600, value / 60 % 60, value % 60]
	else:
		base_string = str(value)
	
	if scoring_rules[table] == 0:
		return base_string
	else:
		return \"%s x %s = %s\" % [base_string, scoring_rules[table], value * scoring_rules[table]]

func str_to_np(string: String) -> NodePath:
	return NodePath(string)
"

[node name="SummaryScreen" type="CenterContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 2 )

[node name="Background" type="TextureRect" parent="."]
offset_right = 3840.0
offset_bottom = 2160.0
texture = ExtResource( 1 )

[node name="PanelContainer" type="PanelContainer" parent="."]
offset_left = 270.0
offset_top = 140.0
offset_right = 3570.0
offset_bottom = 2020.0
custom_minimum_size = Vector2( 3300, 0 )
size_flags_horizontal = 3
theme_type_variation = "0001_brown_transp"

[node name="MarginContainer" type="MarginContainer" parent="PanelContainer"]
offset_left = 64.0
offset_top = 64.0
offset_right = 3236.0
offset_bottom = 1816.0

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/MarginContainer"]
offset_right = 3172.0
offset_bottom = 1752.0
custom_minimum_size = Vector2( 2200, 0 )
size_flags_horizontal = 7
size_flags_vertical = 3
theme_override_constants/separation = 0

[node name="Title" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_right = 3172.0
offset_bottom = 149.0
theme_override_fonts/font = ExtResource( 12 )
text = "Summary"
align = 1

[node name="MapName" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_top = 149.0
offset_right = 3172.0
offset_bottom = 236.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Map name"
align = 1
valign = 1
autowrap = true

[node name="Spacing2" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_top = 236.0
offset_bottom = 268.0
custom_minimum_size = Vector2( 0, 32 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="PanelContainer3" type="PanelContainer" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_left = 86.0
offset_top = 268.0
offset_right = 3086.0
offset_bottom = 689.0
custom_minimum_size = Vector2( 3000, 0 )
size_flags_horizontal = 4
theme_type_variation = "0001_yellow_only_border"

[node name="Items" type="VBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3"]
unique_name_in_owner = true
offset_left = 264.0
offset_top = 64.0
offset_right = 2736.0
offset_bottom = 357.0
size_flags_horizontal = 4
theme_override_constants/separation = 16

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items"]
offset_right = 2472.0
offset_bottom = 87.0
size_flags_horizontal = 0

[node name="Name" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/HBoxContainer"]
offset_right = 1200.0
offset_bottom = 87.0
custom_minimum_size = Vector2( 1200, 0 )
size_flags_horizontal = 0
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Czas:"
align = 2
valign = 1

[node name="Spacing4" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/HBoxContainer"]
offset_left = 1204.0
offset_right = 1268.0
custom_minimum_size = Vector2( 64, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Value" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/HBoxContainer"]
self_modulate = Color( 0.0352941, 0.631373, 0.517647, 1 )
offset_left = 1272.0
offset_right = 2472.0
offset_bottom = 87.0
custom_minimum_size = Vector2( 1200, 0 )
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "00:00:00"
valign = 1

[node name="ClearBonus" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items"]
unique_name_in_owner = true
offset_top = 103.0
offset_right = 1368.0
offset_bottom = 190.0
size_flags_horizontal = 0

[node name="Name" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/ClearBonus"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_right = 1200.0
offset_bottom = 87.0
custom_minimum_size = Vector2( 1200, 0 )
size_flags_horizontal = 0
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Clear Bonus:"
align = 2
valign = 1

[node name="Spacing4" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/ClearBonus"]
offset_left = 1204.0
offset_right = 1268.0
custom_minimum_size = Vector2( 64, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Value" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/ClearBonus"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1272.0
offset_right = 1316.0
offset_bottom = 87.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "+"
valign = 1

[node name="ClearBonusValue" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/ClearBonus"]
unique_name_in_owner = true
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1320.0
offset_right = 1320.0
offset_bottom = 87.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
valign = 1

[node name="Percent" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/ClearBonus"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1324.0
offset_right = 1368.0
offset_bottom = 87.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "%"
valign = 1

[node name="DifficultyMultiplier" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items"]
unique_name_in_owner = true
offset_top = 206.0
offset_right = 1320.0
offset_bottom = 293.0
size_flags_horizontal = 0

[node name="Name" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/DifficultyMultiplier"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_right = 1200.0
offset_bottom = 87.0
custom_minimum_size = Vector2( 1200, 0 )
size_flags_horizontal = 0
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Difficulty Multiplier:"
align = 2
valign = 1

[node name="Spacing4" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/DifficultyMultiplier"]
offset_left = 1204.0
offset_right = 1268.0
custom_minimum_size = Vector2( 64, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Value" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/DifficultyMultiplier"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1272.0
offset_right = 1316.0
offset_bottom = 87.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "×"
valign = 1

[node name="DifficultyMultiplierValue" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/PanelContainer3/Items/DifficultyMultiplier"]
unique_name_in_owner = true
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1320.0
offset_right = 1320.0
offset_bottom = 87.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
valign = 1

[node name="Spacing4" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_top = 689.0
offset_bottom = 721.0
custom_minimum_size = Vector2( 0, 32 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="TheBest" type="PanelContainer" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_left = 1086.0
offset_top = 721.0
offset_right = 2086.0
offset_bottom = 870.0
custom_minimum_size = Vector2( 1000, 0 )
size_flags_horizontal = 4
theme_type_variation = "1000_yellow"

[node name="TheBestInfo" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TheBest"]
offset_left = 64.0
offset_right = 936.0
offset_bottom = 149.0
size_flags_horizontal = 3
size_flags_vertical = 0
theme_override_fonts/font = ExtResource( 12 )
text = "New Best!"
align = 1
valign = 1
uppercase = true

[node name="TotalScore" type="PanelContainer" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_left = 86.0
offset_top = 870.0
offset_right = 3086.0
offset_bottom = 1147.0
custom_minimum_size = Vector2( 3000, 0 )
size_flags_horizontal = 4
theme_type_variation = "0001_yellow_only_border"

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore"]
offset_left = 64.0
offset_top = 64.0
offset_right = 2936.0
offset_bottom = 213.0

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer"]
offset_right = 2872.0
offset_bottom = 149.0
grow_horizontal = 2
size_flags_horizontal = 7

[node name="Score" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/HBoxContainer"]
offset_right = 1400.0
offset_bottom = 149.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_fonts/font = ExtResource( 12 )
text = "Total Score"
align = 2
valign = 1
uppercase = true

[node name="Spacing3" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/HBoxContainer"]
offset_left = 1404.0
offset_right = 1468.0
custom_minimum_size = Vector2( 64, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="TotalValue" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 1472.0
offset_right = 2872.0
offset_bottom = 149.0
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_fonts/font = ExtResource( 12 )
text = "19999999232323223"
valign = 1
autowrap = true
uppercase = true

[node name="Rewards" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer"]
unique_name_in_owner = true
visible = false
offset_top = 153.0
offset_right = 2872.0
offset_bottom = 608.0
grow_horizontal = 2
size_flags_horizontal = 7

[node name="Score" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards"]
offset_right = 1400.0
offset_bottom = 149.0
size_flags_horizontal = 3
size_flags_vertical = 0
theme_override_fonts/font = ExtResource( 12 )
text = "Rewards"
align = 2
valign = 1
uppercase = true

[node name="Spacing3" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards"]
offset_left = 1404.0
offset_right = 1468.0
custom_minimum_size = Vector2( 64, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="RewardContainer" type="VBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards"]
unique_name_in_owner = true
offset_left = 1472.0
offset_right = 2872.0
offset_bottom = 455.0
size_flags_horizontal = 3

[node name="TotalValue" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards/RewardContainer"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_right = 1400.0
offset_bottom = 149.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 12 )
text = "19999999232323223"
valign = 1
autowrap = true
uppercase = true

[node name="TotalValue2" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards/RewardContainer"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_top = 153.0
offset_right = 1400.0
offset_bottom = 302.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 12 )
text = "19999999232323223"
valign = 1
autowrap = true
uppercase = true

[node name="TotalValue3" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/TotalScore/VBoxContainer/Rewards/RewardContainer"]
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_top = 306.0
offset_right = 1400.0
offset_bottom = 455.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 12 )
text = "19999999232323223"
valign = 1
autowrap = true
uppercase = true

[node name="Spacing3" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_top = 1147.0
offset_bottom = 1179.0
custom_minimum_size = Vector2( 0, 32 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Uploading" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_top = 1179.0
offset_right = 3172.0
offset_bottom = 1266.0
theme_override_fonts/font = ExtResource( 3 )
text = "Uploading score..."
align = 1

[node name="Zachent" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_top = 1266.0
offset_right = 3172.0
offset_bottom = 1353.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Try again, you can do better!"
align = 1
valign = 1
autowrap = true

[node name="Cheat" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
modulate = Color( 1, 0, 0, 1 )
offset_top = 1353.0
offset_right = 3172.0
offset_bottom = 1440.0
size_flags_horizontal = 3
size_flags_vertical = 1
theme_override_fonts/font = ExtResource( 3 )
text = "Cheating detected! Nullifying score."
align = 1
valign = 1
autowrap = true

[node name="Spacing5" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_top = 1440.0
offset_bottom = 1472.0
custom_minimum_size = Vector2( 0, 32 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Rank" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_left = 1159.0
offset_top = 1472.0
offset_right = 2013.0
offset_bottom = 1621.0
size_flags_horizontal = 4
theme_override_constants/separation = 32

[node name="HBoxContainer2" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/Rank"]
offset_right = 501.0
offset_bottom = 149.0
grow_horizontal = 2
size_flags_horizontal = 0

[node name="Icon" type="TextureRect" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/HBoxContainer2"]
offset_top = 24.0
offset_right = 100.0
offset_bottom = 124.0
custom_minimum_size = Vector2( 100, 100 )
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource( 4 )
expand = true
stretch_mode = 6

[node name="Spacing3" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/HBoxContainer2"]
offset_left = 104.0
offset_right = 136.0
custom_minimum_size = Vector2( 32, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="RankLabel" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/HBoxContainer2"]
unique_name_in_owner = true
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 140.0
offset_right = 501.0
offset_bottom = 149.0
size_flags_horizontal = 0
size_flags_vertical = 3
theme_override_fonts/font = ExtResource( 12 )
text = "25/176"
valign = 1
uppercase = true

[node name="RankUp" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer/Rank"]
unique_name_in_owner = true
offset_left = 533.0
offset_right = 854.0
offset_bottom = 149.0
grow_horizontal = 2
size_flags_horizontal = 0

[node name="Icon" type="TextureRect" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/RankUp"]
offset_top = 24.0
offset_right = 100.0
offset_bottom = 124.0
custom_minimum_size = Vector2( 100, 100 )
size_flags_horizontal = 0
size_flags_vertical = 4
texture = ExtResource( 5 )
expand = true
stretch_mode = 6

[node name="Spacing3" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/RankUp"]
offset_left = 104.0
offset_right = 136.0
custom_minimum_size = Vector2( 32, 0 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="RankUpValue" type="Label" parent="PanelContainer/MarginContainer/VBoxContainer/Rank/RankUp"]
unique_name_in_owner = true
self_modulate = Color( 1, 0.721569, 0, 1 )
offset_left = 140.0
offset_right = 321.0
offset_bottom = 149.0
size_flags_horizontal = 0
size_flags_vertical = 3
theme_override_fonts/font = ExtResource( 12 )
text = "243"
valign = 1
uppercase = true

[node name="Spacing6" type="Control" parent="PanelContainer/MarginContainer/VBoxContainer"]
offset_top = 1621.0
offset_bottom = 1653.0
custom_minimum_size = Vector2( 0, 32 )
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="Continue" type="HBoxContainer" parent="PanelContainer/MarginContainer/VBoxContainer"]
unique_name_in_owner = true
offset_left = 1264.0
offset_top = 1653.0
offset_right = 1908.0
offset_bottom = 1752.0
size_flags_horizontal = 4
theme_override_constants/separation = 16

[node name="Quit" parent="PanelContainer/MarginContainer/VBoxContainer/Continue" instance=ExtResource( 2 )]
unique_name_in_owner = true
offset_bottom = 99.0
action = "quit"
text = "Quit"

[node name="Button" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer/Continue/Quit"]
offset_left = 24.0
offset_top = 12.0
offset_right = 180.0
offset_bottom = 87.0
focus_mode = 1
flat = true

[node name="Retry" parent="PanelContainer/MarginContainer/VBoxContainer/Continue" instance=ExtResource( 2 )]
unique_name_in_owner = true
offset_left = 220.0
offset_right = 424.0
offset_bottom = 99.0
action = "retry"
text = "Retry"

[node name="Button" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer/Continue/Retry"]
offset_left = 24.0
offset_top = 12.0
offset_right = 180.0
offset_bottom = 87.0
focus_mode = 1
flat = true

[node name="Reload" parent="PanelContainer/MarginContainer/VBoxContainer/Continue" instance=ExtResource( 2 )]
unique_name_in_owner = true
offset_left = 440.0
offset_right = 644.0
offset_bottom = 99.0
action = "reload_save"
text = "Reload Last Save"

[node name="Button" type="Button" parent="PanelContainer/MarginContainer/VBoxContainer/Continue/Reload"]
offset_left = 24.0
offset_top = 12.0
offset_right = 180.0
offset_bottom = 87.0
focus_mode = 1
flat = true

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
bus = "SFX"

[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/Continue/Quit/Button" to="." method="continuu"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/Continue/Retry/Button" to="." method="retry"]
[connection signal="pressed" from="PanelContainer/MarginContainer/VBoxContainer/Continue/Reload/Button" to="." method="reload"]
