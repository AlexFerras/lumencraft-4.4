[gd_scene load_steps=10 format=2]

[ext_resource path="res://Scenes/Game/UI/UI.tscn" type="PackedScene" id=1]
[ext_resource path="res://Nodes/UI/TrailerTimer.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Game/FrameTimePlot.gd" type="Script" id=3]
[ext_resource path="res://Resources/Fonts/Funt10Outline.tres" type="FontFile" id=4]
[ext_resource path="res://Scenes/Game/Game.gd" type="Script" id=10]

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0 ), 0.0, 17.2221, 0, 0, Vector2( 0.192241, 1 ), 0.0195514, 0.0195514, 0, 0, Vector2( 1, 0 ), 0.0232568, 0.0, 0, 0 ]

[sub_resource type="GDScript" id=1]
script/source = "extends RichTextLabel

func _ready() -> void:
	if Music.is_game_build() or Music.is_switch_build():
		queue_free()

func _process(delta: float) -> void:
	var fps := Engine.get_frames_per_second()
	var fps_color := \"lime\"
	if fps < 30:
		fps_color = \"red\"
	elif fps < 144:
		fps_color = \"yellow\"

	text = \"FPS: [color=%s]%s[/color] Total game frames: [color=aqua]%s[/color] Current cycle: [color=aqua]%3d / %3d[/color] Metal/min:%s, Lumen/min:%s, Current music: %s (set %s)\" % [
		fps_color,
		fps,
		Utils.game.frame_from_start,
		Utils.game.frame_this_cycle,
		Utils.game.frame_cycle_length,
		floor(Utils.game.scraps_average_per_minute*10)/10.0,
		floor(Utils.game.lumens_average_per_minute*10)/10.0,
		Music.current_track,
		Music.get_current_set()
	]
	if Utils.game.map:
		text +=\" Lights:%s (%s), Shadows:%s (%s)\" % [Utils.game.map.darkness.get_light_node_count(),
		Utils.game.map.darkness.get_light_node_count_2(),
		Utils.game.map.darkness.get_shadow_node_count(),
		Utils.game.map.darkness.get_shadow_node_count_2()
		]
"

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

@onready var game := get_parent() as Game
@onready var additional_zoom = 0.0
@export var additional_zoom_rate=0.001
func _process(delta: float) -> void:
	var players_alive: int
	var pos: Vector2
	for player in game.players:
		if player.super_dead:
			continue
		
		players_alive += 1
		pos += player.global_position
	
	if players_alive > 0: ## TODO: nigdy nie powinno tak być. Sprawdzić
		global_position = pos / players_alive
		var player_max_pos_difference=0.0
		for player in game.players:
			if player.super_dead:
				continue
			
			player_max_pos_difference =max(player_max_pos_difference,global_position.distance_to(player.global_position))
		
		additional_zoom = clamp((player_max_pos_difference - 100.0) * additional_zoom_rate, 0.0, 0.065)
#		prints(additional_zoom, additional_zoom/0.0625)
"

[sub_resource type="GDScript" id=4]
resource_name = "Autosaver"
script/source = "extends Node

const SAVE_PERIOD = 600.0

var auto_save_label

var timer: float

func _ready() -> void:
	if Save.is_hub():
		queue_free()
		return
	
	update_config()
	await get_parent().ready
	auto_save_label = owner.ui.get_node(\"%Autosave\")

func _physics_process(delta: float) -> void:
	if not Save.block_save:
		timer += delta
	
	if timer >= SAVE_PERIOD:
		auto_save_label.hide()
		if timer >= SAVE_PERIOD + 0.05:
			timer = 0
			Save.save_game(\"Autosave\")
	elif timer >= SAVE_PERIOD - 5:
		auto_save_label.show()
		auto_save_label.text = tr(\"Autosave in %s\") % ceil(SAVE_PERIOD - timer)

func update_config():
	set_physics_process(Save.config.enable_autosave)
"

[node name="Game" type="Node2D"]
script = ExtResource( 10 )
shake_curve = SubResource( 5 )

[node name="UI" parent="." instance=ExtResource( 1 )]

[node name="Debug" type="RichTextLabel" parent="UI"]
anchor_right = 1.0
scale = Vector2( 2, 2 )
theme_override_fonts/mono_font = ExtResource( 4 )
theme_override_fonts/normal_font = ExtResource( 4 )
bbcode_enabled = true
fit_content_height = true
script = SubResource( 1 )

[node name="FrameTimePlot" type="Node2D" parent="UI"]
visible = false
script = ExtResource( 3 )

[node name="FrameTimePlotRect" type="Control" parent="UI"]
anchor_left = 1.0
anchor_right = 1.0
offset_left = -1384.0
offset_top = 24.0
offset_right = -784.0
offset_bottom = 324.0

[node name="TrailerTimer" parent="." instance=ExtResource( 2 )]

[node name="CameraTarget" type="Node2D" parent="."]
script = SubResource( 3 )

[node name="AutoSaver" type="Node" parent="." groups=["config_observers"]]
script = SubResource( 4 )
